{
    "1": "1",
    "Unprompted": "非文本（代碼化）提示詞",
    "Enabled": "Enabled",
    "Unprompted Seed": "Unprompted Seed",
    "NEW! The": "NEW! The",
    "DemonCrawl Avatar Generator": "DemonCrawl Avatar Generator",
    "is out now.": "is out now.",
    "Create pixel art portraits in the style of the popular roguelite, DemonCrawl. Includes a custom Stable Diffusion model trained by the game's developer, as well as a custom GUI and the ability to randomize your prompts.": "Create pixel art portraits in the style of the popular roguelite, DemonCrawl. Includes a custom Stable Diffusion model trained by the game's developer, as well as a custom GUI and the ability to randomize your prompts.",
    "Learn More ➜": "Learn More ➜",
    "Functions": "Functions",
    "Shortcodes": "Shortcodes",
    "Select function:": "Select function:",
    "Example Function": "Example Function",
    "txt2img2img": "txt2img2img",
    "Options": "Options",
    "This template demonstrates the structure of a basic Wizard function. You can find this file in your": "This template demonstrates the structure of a basic Wizard function. You can find this file in your",
    "Unprompted/templates/examples": "Unprompted/templates/examples",
    "folder.": "folder.",
    "The content of the": "The content of the",
    "template": "template",
    "block is parsed as": "block is parsed as",
    "Markdown format": "Markdown format",
    ". This means that you can include rich content like links and pictures here. Cool, huh?": ". This means that you can include rich content like links and pictures here. Cool, huh?",
    "The following UI fields are generated automatically by detecting": "The following UI fields are generated automatically by detecting",
    "<set>": "<set>",
    "blocks with the": "blocks with the",
    "_new": "_new",
    "flag.": "flag.",
    "Enter a subject 🡢 subject": "Enter a subject 🡢 subject",
    "Add fluff terms? 🡢 use_fluff": "Add fluff terms? 🡢 use_fluff",
    "Auto-include this in prompt": "Auto-include this in prompt",
    "This template demonstrates the power of the \"after\" block.": "This template demonstrates the power of the \"after\" block.",
    "First, it processes": "First, it processes",
    "Subject A": "Subject A",
    "via txt2img.": "via txt2img.",
    "It then uses the result as the initial image for img2img, setting": "It then uses the result as the initial image for img2img, setting",
    "Subject B": "Subject B",
    "as the prompt.": "as the prompt.",
    "Subject A 🡢 subject_a": "Subject A 🡢 subject_a",
    "Subject B 🡢 subject_b": "Subject B 🡢 subject_b",
    "Generate Shortcode": "Generate Shortcode",
    "Select shortcode:": "Select shortcode:",
    "##": "##",
    "#": "#",
    "after": "after",
    "antonyms": "antonyms",
    "array": "array",
    "article": "article",
    "autocorrect": "autocorrect",
    "case": "case",
    "casing": "casing",
    "chance": "chance",
    "choose": "choose",
    "config": "config",
    "conjugate": "conjugate",
    "do": "do",
    "elif": "elif",
    "else": "else",
    "eval": "eval",
    "file": "file",
    "filelist": "filelist",
    "for": "for",
    "get": "get",
    "hypernyms": "hypernyms",
    "hyponyms": "hyponyms",
    "if": "if",
    "info": "info",
    "length": "length",
    "max": "max",
    "min": "min",
    "override": "override",
    "pluralize": "pluralize",
    "repeat": "repeat",
    "replace": "取代",
    "set": "set",
    "sets": "sets",
    "singularize": "singularize",
    "substring": "substring",
    "switch": "switch",
    "synonyms": "synonyms",
    "unset": "unset",
    "while": "while",
    "controlnet": "controlnet",
    "enable_multi_images": "enable_multi_images",
    "file2mask": "file2mask",
    "img2img_autosize": "img2img_autosize",
    "img2pez": "img2pez",
    "init_image": "init_image",
    "instance2mask": "instance2mask",
    "invert_mask": "invert_mask",
    "pix2pix_zero": "pix2pix_zero",
    "txt2mask": "txt2mask",
    "##: Houses a multiline comment that will not affect the final output.": "##: Houses a multiline comment that will not affect the final output.",
    "Content": "Content",
    "#: Houses a comment that does not affect your final prompt.": "#: Houses a comment that does not affect your final prompt.",
    "Comment 🡢 str": "Comment 🡢 str",
    "after: Processes arbitrary text following the main output.": "after: Processes arbitrary text following the main output.",
    "Order compared to other [after] blocks 🡢 int": "Order compared to other [after] blocks 🡢 int",
    "antonyms: Replaces the content with one or more antonyms.": "antonyms: Replaces the content with one or more antonyms.",
    "array: Manages a group or list of values.": "array: Manages a group or list of values.",
    "Name of array variable 🡢 str": "Name of array variable 🡢 str",
    "Get or set index statements 🡢 verbatim": "Get or set index statements 🡢 verbatim",
    "Custom delimiter string 🡢 _delimiter": "Custom delimiter string 🡢 _delimiter",
    "Shuffle the array 🡢 _shuffle": "Shuffle the array 🡢 _shuffle",
    "Prepend value(s) to the array 🡢 _prepend": "Prepend value(s) to the array 🡢 _prepend",
    "Append value(s) to the array 🡢 _append": "Append value(s) to the array 🡢 _append",
    "Delete value(s) from the array by index 🡢 _del": "Delete value(s) from the array by index 🡢 _del",
    "Removed specified value(s) from the array 🡢 _remove": "Removed specified value(s) from the array 🡢 _remove",
    "Find the first index of the following value(s) 🡢 _find": "Find the first index of the following value(s) 🡢 _find",
    "article: Returns the content with prefixed with a definite or indefinite article.": "article: Returns the content with prefixed with a definite or indefinite article.",
    "autocorrect: Attempts to correct the spelling of content.": "autocorrect: Attempts to correct the spelling of content.",
    "case: Use within [switch] to run different logic blocks depending on the value of a var.": "case: Use within [switch] to run different logic blocks depending on the value of a var.",
    "Matching value 🡢 str": "Matching value 🡢 str",
    "casing: Converts the casing of content.": "casing: Converts the casing of content.",
    "Casing method 🡢 str": "Casing method 🡢 str",
    "camelcase": "camelcase",
    "uppercase": "uppercase",
    "lowercase": "lowercase",
    "pascalcase": "pascalcase",
    "snakecase": "snakecase",
    "constcase": "constcase",
    "kebabcase": "kebabcase",
    "upperkebabcase": "upperkebabcase",
    "separatorcase": "separatorcase",
    "sentencecase": "sentencecase",
    "titlecase": "titlecase",
    "alphanumcase": "alphanumcase",
    "chance: Returns the content if the number you passed is greater than or equal to a random number between 1 and 100.": "chance: Returns the content if the number you passed is greater than or equal to a random number between 1 and 100.",
    "Highest possible roll 🡢 _sides": "Highest possible roll 🡢 _sides",
    "choose: Returns one of multiple options, delimited by newline or vertical pipe": "choose: Returns one of multiple options, delimited by newline or vertical pipe",
    "Number of times to choose 🡢 int": "Number of times to choose 🡢 int",
    "String delimiter when returning more than one choice 🡢 _sep": "String delimiter when returning more than one choice 🡢 _sep",
    "Custom weight per option 🡢 _weighted": "Custom weight per option 🡢 _weighted",
    "Override random nature of shortcode with predetermined outcome 🡢 _case": "Override random nature of shortcode with predetermined outcome 🡢 _case",
    "config: Updates your settings with the content for the duration of a run.": "config: Updates your settings with the content for the duration of a run.",
    "conjugate: Converts the content verb into another conjugated form.": "conjugate: Converts the content verb into another conjugated form.",
    "do: It's a do-until loop.": "do: It's a do-until loop.",
    "Until condition 🡢 until": "Until condition 🡢 until",
    "elif: Shorthand 'else-if.'": "elif: Shorthand 'else-if.'",
    "else: Returns content if a previous conditional shortcode failed its check, otherwise discards content.": "else: Returns content if a previous conditional shortcode failed its check, otherwise discards content.",
    "eval: Parses the content using the simpleeval library, returning the result. Particularly useful for arithmetic.": "eval: Parses the content using the simpleeval library, returning the result. Particularly useful for arithmetic.",
    "file: Processes the file content of 'path.'": "file: Processes the file content of 'path.'",
    "Filepath 🡢 str": "Filepath 🡢 str",
    "Expected encoding 🡢 _encoding": "Expected encoding 🡢 _encoding",
    "filelist: Returns a list of files at a given location using glob.": "filelist: Returns a list of files at a given location using glob.",
    "Result delimiter 🡢 _delimiter": "Result delimiter 🡢 _delimiter",
    "for: It's a for loop.": "for: It's a for loop.",
    "Set a variable 🡢 my_var": "Set a variable 🡢 my_var",
    "Conditional check 🡢 str": "Conditional check 🡢 str",
    "Operation to perform at the end step 🡢 str": "Operation to perform at the end step 🡢 str",
    "get: Returns the value of a variable.": "get: Returns the value of a variable.",
    "Variable to get 🡢 str": "Variable to get 🡢 str",
    "Default value if the variable doesn't exist 🡢 _default": "Default value if the variable doesn't exist 🡢 _default",
    "Separator string when returning multiple variables 🡢 _sep": "Separator string when returning multiple variables 🡢 _sep",
    "String to prepend to the variable 🡢 _before": "String to prepend to the variable 🡢 _before",
    "String to append to the variable 🡢 _after": "String to append to the variable 🡢 _after",
    "hypernyms: Replaces the content with one or more hypernyms.": "hypernyms: Replaces the content with one or more hypernyms.",
    "hyponyms: Replaces the content with one or more synonyms.": "hyponyms: Replaces the content with one or more synonyms.",
    "if: Checks whether a variable is equal to a given value.": "if: Checks whether a variable is equal to a given value.",
    "Conditional statement 🡢 my_var": "Conditional statement 🡢 my_var",
    "Evaluation method 🡢 _is": "Evaluation method 🡢 _is",
    "==": "==",
    "!=": "!=",
    "<": "<",
    "<=": "<=",
    ">": ">",
    ">=": ">=",
    "Invert evaluation such that a true statement will return false 🡢 _not": "Invert evaluation such that a true statement will return false 🡢 _not",
    "Return true if any one of multiple conditions are true 🡢 _any": "Return true if any one of multiple conditions are true 🡢 _any",
    "info: Returns various types of metadata about the content.": "info: Returns various types of metadata about the content.",
    "Return the character count 🡢 character_count": "Return the character count 🡢 character_count",
    "Return the word count 🡢 word_count": "Return the word count 🡢 word_count",
    "Return the CLIP token count (prompt complexity) 🡢 clip_count": "Return the CLIP token count (prompt complexity) 🡢 clip_count",
    "Return the count of a custom substring 🡢 string_count": "Return the count of a custom substring 🡢 string_count",
    "length: Returns the number of items in a delimited string.": "length: Returns the number of items in a delimited string.",
    "The string to evaluate 🡢 str": "The string to evaluate 🡢 str",
    "Delimiter to check for 🡢 _delimiter": "Delimiter to check for 🡢 _delimiter",
    "Maximum number to be returned 🡢 _max": "Maximum number to be returned 🡢 _max",
    "max: Returns the maximum value among the given arguments.": "max: Returns the maximum value among the given arguments.",
    "min: Returns the minimum value among the given arguments.": "min: Returns the minimum value among the given arguments.",
    "override: Force variable(s) to hold a pre-determined value the rest of the run.": "override: Force variable(s) to hold a pre-determined value the rest of the run.",
    "Arguments in variable=value format 🡢 verbatim": "Arguments in variable=value format 🡢 verbatim",
    "pluralize: Converts the content into plural form.": "pluralize: Converts the content into plural form.",
    "random: Returns a random number between 0 and a given max value (inclusive)": "random: Returns a random number between 0 and a given max value (inclusive)",
    "Minimum number 🡢 _min": "Minimum number 🡢 _min",
    "Maximum number 🡢 _max": "Maximum number 🡢 _max",
    "Evaluate as floats instead of integers 🡢 _float": "Evaluate as floats instead of integers 🡢 _float",
    "repeat: Returns the content an arbitrary number of times.": "repeat: Returns the content an arbitrary number of times.",
    "Number of times to repeat the content 🡢 int": "Number of times to repeat the content 🡢 int",
    "Delimiter string between outputs 🡢 _sep": "Delimiter string between outputs 🡢 _sep",
    "replace: Updates a string using the arguments for replacement logic.": "replace: Updates a string using the arguments for replacement logic.",
    "Arbitrary replacement arguments in old=new format 🡢 verbatim": "Arbitrary replacement arguments in old=new format 🡢 verbatim",
    "Original value, with advanced expression support 🡢 _from": "Original value, with advanced expression support 🡢 _from",
    "New value, with advanced expression support 🡢 _to": "New value, with advanced expression support 🡢 _to",
    "Maximum number of times the replacement may occur 🡢 _count": "Maximum number of times the replacement may occur 🡢 _count",
    "set: Stores a value into a given variable.": "set: Stores a value into a given variable.",
    "Variable name 🡢 verbatim": "Variable name 🡢 verbatim",
    "Only set this variable if it doesn't already exist 🡢 _new": "Only set this variable if it doesn't already exist 🡢 _new",
    "Array of valid values (used in conjunction with _new) 🡢 _choices": "Array of valid values (used in conjunction with _new) 🡢 _choices",
    "Append the content to the variable's current value 🡢 _append": "Append the content to the variable's current value 🡢 _append",
    "Prepend the content to the variable's current value 🡢 _prepend": "Prepend the content to the variable's current value 🡢 _prepend",
    "Print the variable's value 🡢 _out": "Print the variable's value 🡢 _out",
    "sets: The atomic version of [set] that lets you set multiple variables at once.": "sets: The atomic version of [set] that lets you set multiple variables at once.",
    "Arbitrary arguments in variable=value format 🡢 verbatim": "Arbitrary arguments in variable=value format 🡢 verbatim",
    "singularize: Converts the content into singular form.": "singularize: Converts the content into singular form.",
    "substring: Slices up the content.": "substring: Slices up the content.",
    "Beginning index of the substring 🡢 start": "Beginning index of the substring 🡢 start",
    "Ending index of the substring 🡢 end": "Ending index of the substring 🡢 end",
    "Step size 🡢 step": "Step size 🡢 step",
    "Unit type 🡢 unit": "Unit type 🡢 unit",
    "characters": "characters",
    "words": "words",
    "switch: Use in conjunction with [case] to run different logic blocks depending on the value of a var.": "switch: Use in conjunction with [case] to run different logic blocks depending on the value of a var.",
    "Variable to test against 🡢 verbatim": "Variable to test against 🡢 verbatim",
    "synonyms: Replaces the content with one or more synonyms.": "synonyms: Replaces the content with one or more synonyms.",
    "template: This is used by the Wizard to instantiate a custom template UI. It is bypassed by the normal shortcode parser.": "template: This is used by the Wizard to instantiate a custom template UI. It is bypassed by the normal shortcode parser.",
    "unset: Removes one or more variables from memory. Generally not needed.": "unset: Removes one or more variables from memory. Generally not needed.",
    "Arbitrary variable names to free from memory 🡢 verbatim": "Arbitrary variable names to free from memory 🡢 verbatim",
    "while: Loops content until the condition returns false.": "while: Loops content until the condition returns false.",
    "Arbitrary conditional statement(s) to test against 🡢 verbatim": "Arbitrary conditional statement(s) to test against 🡢 verbatim",
    "Invert evaluation such that a false condition will end the loop 🡢 _not": "Invert evaluation such that a false condition will end the loop 🡢 _not",
    "controlnet: A neural network structure to control diffusion models by adding extra conditions. Check manual for setup info.": "controlnet: A neural network structure to control diffusion models by adding extra conditions. Check manual for setup info.",
    "Model name (do not include extension) 🡢 model": "Model name (do not include extension) 🡢 model",
    "Resolution of the detection map 🡢 detect_resolution": "Resolution of the detection map 🡢 detect_resolution",
    "Use low VRAM mode? 🡢 save_memory": "Use low VRAM mode? 🡢 save_memory",
    "DDIM ETA 🡢 eta": "DDIM ETA 🡢 eta",
    "Value Threshold 🡢 value_threhsold": "Value Threshold 🡢 value_threhsold",
    "Distance Threshold 🡢 distance_threhsold": "Distance Threshold 🡢 distance_threhsold",
    "Background Threshold 🡢 bg_threhsold": "Background Threshold 🡢 bg_threhsold",
    "Canny low threshold 🡢 low_threshold": "Canny low threshold 🡢 low_threshold",
    "Canny high threshold 🡢 high_threshold": "Canny high threshold 🡢 high_threshold",
    "Render hands with Openpose? 🡢 openpose_hands": "Render hands with Openpose? 🡢 openpose_hands",
    "enable_multi_images: Allows to use multiple init_images or multiple masks": "enable_multi_images: Allows to use multiple init_images or multiple masks",
    "file2mask: Modify or replace your img2img mask with arbitrary files.": "file2mask: Modify or replace your img2img mask with arbitrary files.",
    "Path to image file 🡢 str": "Path to image file 🡢 str",
    "Mask blend mode 🡢 mode": "Mask blend mode 🡢 mode",
    "add": "add",
    "subtract": "subtract",
    "discard": "discard",
    "Show mask in output 🡢 show": "Show mask in output 🡢 show",
    "img2img: Runs an img2img task inside of an [after] block.": "img2img: Runs an img2img task inside of an [after] block.",
    "img2img_autosize: Automatically adjusts the width and height parameters in img2img mode based on the proportions of the input image.": "img2img_autosize: Automatically adjusts the width and height parameters in img2img mode based on the proportions of the input image.",
    "Minimum pixels of at least one dimension 🡢 target": "Minimum pixels of at least one dimension 🡢 target",
    "Only run this shortcode if using full resolution inpainting mode 🡢 only_full_res": "Only run this shortcode if using full resolution inpainting mode 🡢 only_full_res",
    "img2pez: Optimize a hard prompt using the PEZ algorithm and CLIP encoders, AKA Hard Prompts Made Easy.": "img2pez: Optimize a hard prompt using the PEZ algorithm and CLIP encoders, AKA Hard Prompts Made Easy.",
    "Image path 🡢 image_path": "Image path 🡢 image_path",
    "Prompt length 🡢 prompt_length": "Prompt length 🡢 prompt_length",
    "Iterations 🡢 iterations": "Iterations 🡢 iterations",
    "Learning rate 🡢 learning_rate": "Learning rate 🡢 learning_rate",
    "Weight decay 🡢 weight_decay": "Weight decay 🡢 weight_decay",
    "Prompt bs (well, that's what they call it) 🡢 prompt_bs": "Prompt bs (well, that's what they call it) 🡢 prompt_bs",
    "CLIP model 🡢 clip_model": "CLIP model 🡢 clip_model",
    "ViT-L-14": "ViT-L-14",
    "ViT-H-14": "ViT-H-14",
    "CLIP pretrain 🡢 clip_pretrain": "CLIP pretrain 🡢 clip_pretrain",
    "openai": "openai",
    "laion2b_s32b_b79k": "laion2b_s32b_b79k",
    "Try freeing CLIP model from memory? 🡢 free_memory": "Try freeing CLIP model from memory? 🡢 free_memory",
    "init_image: Loads an image from the given path and sets it as the initial image for use with img2img.": "init_image: Loads an image from the given path and sets it as the initial image for use with img2img.",
    "Image path": "Image path",
    "instance2mask: Creates an image mask from instances of types specified by the content for use with inpainting.": "instance2mask: Creates an image mask from instances of types specified by the content for use with inpainting.",
    "refine": "refine",
    "Run inpaint per instance found 🡢 per_instance": "Run inpaint per instance found 🡢 per_instance",
    "Precision of selected area 🡢 mask_precision": "Precision of selected area 🡢 mask_precision",
    "Padding radius in pixels 🡢 padding": "Padding radius in pixels 🡢 padding",
    "Smoothing radius in pixels 🡢 smoothing": "Smoothing radius in pixels 🡢 smoothing",
    "Precision of instance selection 🡢 instance_precision": "Precision of instance selection 🡢 instance_precision",
    "Number of instance to select 🡢 select": "Number of instance to select 🡢 select",
    "Instance selection mode 🡢 select_mode": "Instance selection mode 🡢 select_mode",
    "overlap": "overlap",
    "relative overlap": "relative overlap",
    "greatest area": "greatest area",
    "invert_mask: Inverts the mask (great in combination with multiple txt2masks)": "invert_mask: Inverts the mask (great in combination with multiple txt2masks)",
    "pix2pix_zero: A diffusion-based image-to-image approach that allows users to specify the edit direction on-the-fly.": "pix2pix_zero: A diffusion-based image-to-image approach that allows users to specify the edit direction on-the-fly.",
    "txt2mask: Creates an image mask from the content for use with inpainting.": "txt2mask: Creates an image mask from the content for use with inpainting.",
    "Use legacy weights 🡢 legacy_weights": "Use legacy weights 🡢 legacy_weights",
    "Precision of selected area 🡢 precision": "Precision of selected area 🡢 precision",
    "Negative mask prompt 🡢 negative_mask": "Negative mask prompt 🡢 negative_mask",
    "Negative mask precision of selected area 🡢 neg_precision": "Negative mask precision of selected area 🡢 neg_precision",
    "Negative mask padding radius in pixels 🡢 neg_padding": "Negative mask padding radius in pixels 🡢 neg_padding",
    "Negative mask smoothing radius in pixels 🡢 neg_smoothing": "Negative mask smoothing radius in pixels 🡢 neg_smoothing",
    "Mask color, enables Inpaint Sketch mode 🡢 sketch_color": "Mask color, enables Inpaint Sketch mode 🡢 sketch_color",
    "Mask alpha, must be used in conjunction with mask color 🡢 sketch_alpha": "Mask alpha, must be used in conjunction with mask color 🡢 sketch_alpha",
    "Save the mask size to the following variable 🡢 size_var": "Save the mask size to the following variable 🡢 size_var",
    "Process Text": "Process Text",
    "Running Unprompted v7.5.9 via the official Automatic1111 WebUI extension.": "Running Unprompted v7.5.9 via the official Automatic1111 WebUI extension.",
    "Unprompted is a powerful templating language written in Python. Unlike most templating languages, Unprompted was designed for": "Unprompted is a powerful templating language written in Python. Unlike most templating languages, Unprompted was designed for",
    "maximum readibility with natural language.": "maximum readibility with natural language.",
    "It is built around": "It is built around",
    "[shortcodes]": "[shortcodes]",
    "and inspired by the likes of BBCode.": "and inspired by the likes of BBCode.",
    "Online resources:": "Online resources:",
    "Github Project Page": "Github Project Page",
    "Discussion Board": "Discussion Board",
    "Issue Tracker": "Issue Tracker",
    "Software created by": "Software created by",
    "Therefore Games": "Therefore Games",
    "Stay informed on the latest Unprompted news and updates.": "Stay informed on the latest Unprompted news and updates.",
    "Synonyms, Sketches and Wizards — 28 January 2023": "Synonyms, Sketches and Wizards — 28 January 2023",
    "It's been a while since the last announcement post... let's catch up on some of the new features in Unprompted!": "It's been a while since the last announcement post... let's catch up on some of the new features in Unprompted!",
    "Earlier this week, I added a new tab to the Wizard panel called": "Earlier this week, I added a new tab to the Wizard panel called",
    "Functions Mode": "Functions Mode",
    ". It searches your templates folder for txt files that begin with the special": ". It searches your templates folder for txt files that begin with the special",
    "[template]": "[template]",
    "block. These files are then assembled into": "block. These files are then assembled into",
    "custom GUIs": "custom GUIs",
    "based on their": "based on their",
    "[set _new]": "[set _new]",
    "calls. In other words, your templates can now contain": "calls. In other words, your templates can now contain",
    "logic": "logic",
    "and": "and",
    "interface elements": "interface elements",
    "inside of a single text file. Very easy to share with others. I hope you'll give Functions Mode a try!": "inside of a single text file. Very easy to share with others. I hope you'll give Functions Mode a try!",
    "Next, we have a bunch of new natural language processing features in Unprompted. With the power of": "Next, we have a bunch of new natural language processing features in Unprompted. With the power of",
    "NLTK": "NLTK",
    "and the": "and the",
    "Moby Thesaurus": "Moby Thesaurus",
    ", you can now find synonyms, antonyms, hypernyms, and hyponyms for any text. Once the word databases are downloaded to your machine, an internet connection is not required to use these features.": ", you can now find synonyms, antonyms, hypernyms, and hyponyms for any text. Once the word databases are downloaded to your machine, an internet connection is not required to use these features.",
    "What are hyponyms and hypernyms, you might ask? Well, they describe a hierarchical relationship between words. For example,": "What are hyponyms and hypernyms, you might ask? Well, they describe a hierarchical relationship between words. For example,",
    "dog": "dog",
    "cat": "cat",
    "are hyponyms of": "are hyponyms of",
    "animal": "animal",
    ", and": ", and",
    "is a hypernym of": "is a hypernym of",
    "You can use these functions in place of a traditional set of wildcards. Of course, it's hard to beat a nice, curated list of terms, but if you want fast results, give something like this a try:": "You can use these functions in place of a traditional set of wildcards. Of course, it's hard to beat a nice, curated list of terms, but if you want fast results, give something like this a try:",
    "[hyponyms max=1]food[/hyponyms]": "[hyponyms max=1]food[/hyponyms]",
    "Presto, you've got random food.": "Presto, you've got random food.",
    "There have also been some cool updates for the": "There have also been some cool updates for the",
    "[txt2mask]": "[txt2mask]",
    "feature.": "feature.",
    "Shoutout to Weber Samuel": "Shoutout to Weber Samuel",
    "for introducing several new parameters such as negative precision as well as multiple init image support. Very handy!": "for introducing several new parameters such as negative precision as well as multiple init image support. Very handy!",
    "I also added": "I also added",
    "Inpaint Sketch compatibility": "Inpaint Sketch compatibility",
    "in the form of the new": "in the form of the new",
    "sketch_color": "sketch_color",
    "sketch_alpha": "sketch_alpha",
    "parameters. This can give you much more control over your img2img results, and in the future may even support multiple colors per mask.": "parameters. This can give you much more control over your img2img results, and in the future may even support multiple colors per mask.",
    "That's all for now. Enjoy!": "That's all for now. Enjoy!",
    "Happy Holidays from Unprompted — 22 December 2022": "Happy Holidays from Unprompted — 22 December 2022",
    "In the newly released Unprompted v4.2.0, the": "In the newly released Unprompted v4.2.0, the",
    "shortcode has received a massive upgrade.": "shortcode has received a massive upgrade.",
    "It is now compatible with": "It is now compatible with",
    "the new refined CLIPseg weights": "the new refined CLIPseg weights",
    "which will help you create higher fidelity masks.": "which will help you create higher fidelity masks.",
    "If your masks are still looking a bit \"blocky,\" give the new": "If your masks are still looking a bit \"blocky,\" give the new",
    "smoothing": "smoothing",
    "argument a try. Set it to a value around 20 and you should get nice, rounded shapes:": "argument a try. Set it to a value around 20 and you should get nice, rounded shapes:",
    "Additionally, you can now specify": "Additionally, you can now specify",
    "size_var": "size_var",
    "which will cause the shortcode to calculate the amount of space that your mask occupies in the canvas. You can use this to intelligently adjust other parameters, such as CFG scale. For example, if you mask out the \"face\" of a subject, but it represents a very small percentage of the canvas, you may decide to lower your img2img CFG.": "which will cause the shortcode to calculate the amount of space that your mask occupies in the canvas. You can use this to intelligently adjust other parameters, such as CFG scale. For example, if you mask out the \"face\" of a subject, but it represents a very small percentage of the canvas, you may decide to lower your img2img CFG.",
    "This update also introduces a few new shortcodes for file handling as well as enhancements for": "This update also introduces a few new shortcodes for file handling as well as enhancements for",
    "[get]": "[get]",
    ". Check out the Changelog for more details.": ". Check out the Changelog for more details.",
    "Have a Merry Christmas!": "Have a Merry Christmas!",
    "Housekeeping Update along with txt2mask Support! — 11 December 2022": "Housekeeping Update along with txt2mask Support! — 11 December 2022",
    "Welcome to Unprompted v4.0.0!": "Welcome to Unprompted v4.0.0!",
    "The WebUI extension has received a major facelift. It does a much better job now of utilizing the Gradio interface. For example, our markdown files are rendered in the app itself (maybe you're seeing that right now?), so you no longer have to visit Github or wade through your filesystem to figure out what's new. Even the Manual is right there at your fingertips.": "The WebUI extension has received a major facelift. It does a much better job now of utilizing the Gradio interface. For example, our markdown files are rendered in the app itself (maybe you're seeing that right now?), so you no longer have to visit Github or wade through your filesystem to figure out what's new. Even the Manual is right there at your fingertips.",
    "It's more than just a pretty face though. Unprompted v4.0.0 also overhauls the \"Dry Run\" feature to make it... even drier. Previously, Dry Run would engage the WebUI's \"Generation\" pipeline which meant it had to produce a dummy image. Not great. Fortunately, this is no longer the case.": "It's more than just a pretty face though. Unprompted v4.0.0 also overhauls the \"Dry Run\" feature to make it... even drier. Previously, Dry Run would engage the WebUI's \"Generation\" pipeline which meant it had to produce a dummy image. Not great. Fortunately, this is no longer the case.",
    "We have also added an \"Enabled\" checkbox to the UI so you don't have to switch tabs when you wish to temporarily bypass Unprompted.": "We have also added an \"Enabled\" checkbox to the UI so you don't have to switch tabs when you wish to temporarily bypass Unprompted.",
    "On the shortcode side of things, I have rewritten my": "On the shortcode side of things, I have rewritten my",
    "script as a native Unprompted shortcode. This means you can create unique mask selections for every image in a batch operation!": "script as a native Unprompted shortcode. This means you can create unique mask selections for every image in a batch operation!",
    "I hope to add more Stable Diffusion-centric shortcodes in the near future. Up until now, most of my development attention has been spent on building a strong foundation for Unprompted as a general templating language. I think it's in a pretty good spot now, so I can start focusing more on the reason this software exists in the first place: to greatly improve our prompting workflows.": "I hope to add more Stable Diffusion-centric shortcodes in the near future. Up until now, most of my development attention has been spent on building a strong foundation for Unprompted as a general templating language. I think it's in a pretty good spot now, so I can start focusing more on the reason this software exists in the first place: to greatly improve our prompting workflows.",
    "Enjoy.": "Enjoy.",
    "Big Update Released & The Direction of Unprompted — 7 December 2022": "Big Update Released & The Direction of Unprompted — 7 December 2022",
    "In the hopes of establishing a direct line of communication with the userbase, I am going to use this file for sharing news and updates about Unprompted.": "In the hopes of establishing a direct line of communication with the userbase, I am going to use this file for sharing news and updates about Unprompted.",
    "You can always refer to": "You can always refer to",
    "CHANGELOG.md": "CHANGELOG.md",
    "for itemized description of changes, but sometimes it's nice to read about things less technically.": "for itemized description of changes, but sometimes it's nice to read about things less technically.",
    "An hour ago, I released Unprompted v2.0.0, which is my largest update since launch. It introduces a streamlined form of \"advanced expressions\" that, in my view, brings Unprompted up to the level of a real, honest-to-goodness templating language.": "An hour ago, I released Unprompted v2.0.0, which is my largest update since launch. It introduces a streamlined form of \"advanced expressions\" that, in my view, brings Unprompted up to the level of a real, honest-to-goodness templating language.",
    "With advanced expressions, you can really go to town with your shortcode arguments. You can mix-and-match shortcodes with logic evaluation as such:": "With advanced expressions, you can really go to town with your shortcode arguments. You can mix-and-match shortcodes with logic evaluation as such:",
    "[if \"variable_a is 'something' and variable_b is not {choose}option a|option b|option c{/choose}\"]Print me[/if]": "[if \"variable_a is 'something' and variable_b is not {choose}option a|option b|option c{/choose}\"]Print me[/if]",
    "Under the hood, these expressions are processed with the": "Under the hood, these expressions are processed with the",
    "simpleeval library": "simpleeval library",
    "which is designed to be safe for networked use.": "which is designed to be safe for networked use.",
    "There is one fairly significant drawback to this new feature: I had to change secondary shortcode syntax from": "There is one fairly significant drawback to this new feature: I had to change secondary shortcode syntax from",
    "<>": "<>",
    "to": "to",
    "{}": "{}",
    ". Personally, I liked the aesthetics of": ". Personally, I liked the aesthetics of",
    "a bit better, but it conflicted with less-than, greater-than logic operators. This means that older templates may not work in v2.0.0, which is a bit of a pain. I only make breaking changes like this when I feel it's worthwhile.": "a bit better, but it conflicted with less-than, greater-than logic operators. This means that older templates may not work in v2.0.0, which is a bit of a pain. I only make breaking changes like this when I feel it's worthwhile.",
    "Now that Unprompted has a fairly robust feature set, I plan on turning my attention to bug reports. There are a few kinks I'd like to address soon. In particular,": "Now that Unprompted has a fairly robust feature set, I plan on turning my attention to bug reports. There are a few kinks I'd like to address soon. In particular,",
    "Unprompted does not work well with the Dynamic Prompts extension": "Unprompted does not work well with the Dynamic Prompts extension",
    ", possibly due to a limitation in the A1111 WebUI. I am considering a few different solutions to this - feel free to weigh in with your own input.": ", possibly due to a limitation in the A1111 WebUI. I am considering a few different solutions to this - feel free to weigh in with your own input.",
    "Additionally, I would like to overhaul the extension UI as well as the github docs. Both of these were hastily thrown together and could benefit from a lot of polish. You can expect improvements in these areas over the next few updates!": "Additionally, I would like to overhaul the extension UI as well as the github docs. Both of these were hastily thrown together and could benefit from a lot of polish. You can expect improvements in these areas over the next few updates!",
    "That's all for now - thank you for reading, and good luck with your prompts!": "That's all for now - thank you for reading, and good luck with your prompts!",
    "All notable changes to this project will be documented in this file.": "All notable changes to this project will be documented in this file.",
    "For more details on new features, please check the": "For more details on new features, please check the",
    "Manual": "Manual",
    "7.5.9 - 15 February 2023": "7.5.9 - 15 February 2023",
    "About": "About",
    "The": "The",
    "[controlnet]": "[controlnet]",
    "shortcode is now considered a \"legacy\" feature as it is generally less robust than": "shortcode is now considered a \"legacy\" feature as it is generally less robust than",
    "Mikubill's dedicated ControlNet extension": "Mikubill's dedicated ControlNet extension",
    ". I have decided to re-allocate my energy into other aspects of Unprompted as I prefer to work on features that are not amply represented in the SD community.": ". I have decided to re-allocate my energy into other aspects of Unprompted as I prefer to work on features that are not amply represented in the SD community.",
    "Added": "Added",
    "shortcode now supports the": "shortcode now supports the",
    "openpose_hands": "openpose_hands",
    "argument": "argument",
    "Removed": "Removed",
    "Unnecessary Gradio files from ControlNet library": "Unnecessary Gradio files from ControlNet library",
    "7.5.8 - 14 February 2023": "7.5.8 - 14 February 2023",
    "Changed": "Changed",
    "Fixed a startup crash that could occur when a ControlNet model was listed as previously selected": "Fixed a startup crash that could occur when a ControlNet model was listed as previously selected",
    "7.5.7 - 13 February 2023": "7.5.7 - 13 February 2023",
    "Fixed": "Fixed",
    "save button": "save button",
    "7.5.6 - 13 February 2023": "7.5.6 - 13 February 2023",
    "shortcode now supports the Canny, HED Boundary, and Segementation Map models": "shortcode now supports the Canny, HED Boundary, and Segementation Map models",
    "Implemented Wizard UI for the": "Implemented Wizard UI for the",
    "shortcode": "shortcode",
    "Fixed a syntax issue related to sliders and the Wizard Shortcode generator": "Fixed a syntax issue related to sliders and the Wizard Shortcode generator",
    "7.5.5 - 13 February 2023": "7.5.5 - 13 February 2023",
    "shortcode now supports the Normal Map model": "shortcode now supports the Normal Map model",
    "Fixed another memory leak related to": "Fixed another memory leak related to",
    "7.5.4 - 13 February 2023": "7.5.4 - 13 February 2023",
    "shortcode now supports the Depth model": "shortcode now supports the Depth model",
    "ETA is no longer mistakenly assigned to denoising strength": "ETA is no longer mistakenly assigned to denoising strength",
    "Potentially fixed memory leak related to": "Potentially fixed memory leak related to",
    "7.5.3 - 13 February 2023": "7.5.3 - 13 February 2023",
    "shortcode now supports face restoration": "shortcode now supports face restoration",
    "Fixed bug causing": "Fixed bug causing",
    "to run inadvertently": "to run inadvertently",
    "7.5.2 - 13 February 2023": "7.5.2 - 13 February 2023",
    "shortcode now supports Scribble and M-LSD Line models with the": "shortcode now supports Scribble and M-LSD Line models with the",
    "model": "model",
    "7.5.1 - 13 February 2023": "7.5.1 - 13 February 2023",
    "shortcode now expects its models to be in the": "shortcode now expects its models to be in the",
    "Stable-diffusion": "Stable-diffusion",
    "directory like a normal model": "directory like a normal model",
    "7.5.0 - 13 February 2023": "7.5.0 - 13 February 2023",
    "The new features in this release are still under development and may or may not work as intended.": "The new features in this release are still under development and may or may not work as intended.",
    "New WIP": "New WIP",
    "shortcode, only supports \"pose2image\" at the moment": "shortcode, only supports \"pose2image\" at the moment",
    "[pix2pix_zero]": "[pix2pix_zero]",
    "New WIP setting to enable compatibility with extra networks such as Lora, not yet functional": "New WIP setting to enable compatibility with extra networks such as Lora, not yet functional",
    "Moved the": "Moved the",
    "pez_open_clip": "pez_open_clip",
    "dependency into the": "dependency into the",
    "stable_diffusion": "stable_diffusion",
    "subfolder": "subfolder",
    "7.4.0 - 10 February 2023": "7.4.0 - 10 February 2023",
    "[img2pez]": "[img2pez]",
    "shortcode now accepts multiple image paths and will optimize a single prompt across all of them": "shortcode now accepts multiple image paths and will optimize a single prompt across all of them",
    "shortcode now supports": "shortcode now supports",
    "free_memory": "free_memory",
    "shortcode log now outputs the best candidates in realtime, courtesy of @bakkot": "shortcode log now outputs the best candidates in realtime, courtesy of @bakkot",
    "Reduced the": "Reduced the",
    "default value for": "default value for",
    "iterations": "iterations",
    "from 3000 to 200 (thank you to @bakkot for the suggested optimizations)": "from 3000 to 200 (thank you to @bakkot for the suggested optimizations)",
    "Increased the": "Increased the",
    "prompt_length": "prompt_length",
    "from 8 to 16": "from 8 to 16",
    "template_directory": "template_directory",
    "setting changed from": "setting changed from",
    "./templates": "./templates",
    "templates": "templates",
    "for Linux compatibility, may also help with colab setups": "for Linux compatibility, may also help with colab setups",
    "[...nyms]": "[...nyms]",
    "shortcodes will now perform a download check for the required": "shortcodes will now perform a download check for the required",
    "wordnet": "wordnet",
    "package": "package",
    "Fixed Usage section in README.md": "Fixed Usage section in README.md",
    "Fixed a few filepaths in": "Fixed a few filepaths in",
    "templates/common/examples/human/main.txt": "templates/common/examples/human/main.txt",
    "Rewrote the Wizard Shortcode generator function to fix a few issues": "Rewrote the Wizard Shortcode generator function to fix a few issues",
    "7.3.0 - 8 February 2023": "7.3.0 - 8 February 2023",
    "shortcode now supports all settings from the Hard Prompts Made Easy method": "shortcode now supports all settings from the Hard Prompts Made Easy method",
    "image_path": "image_path",
    "if you wish to use something other than the initial img2img image": "if you wish to use something other than the initial img2img image",
    "Full Wizard GUI compatibility for": "Full Wizard GUI compatibility for",
    "parse_filepath()": "parse_filepath()",
    "function has been updated to support choosing a random file from a directory": "function has been updated to support choosing a random file from a directory",
    "7.2.0 - 8 February 2023": "7.2.0 - 8 February 2023",
    "New": "New",
    "shortcode (Hard Prompts Made Easy)": "shortcode (Hard Prompts Made Easy)",
    "7.1.0 - 7 February 2023": "7.1.0 - 7 February 2023",
    "pattern": "pattern",
    "package to install.py for additional language processing features": "package to install.py for additional language processing features",
    "[article]": "[article]",
    "[pluralize]": "[pluralize]",
    "[singularize]": "[singularize]",
    "[conjugate]": "[conjugate]",
    "[autocorrect]": "[autocorrect]",
    "template is now available as a Wizard Function": "template is now available as a Wizard Function",
    "Updated the": "Updated the",
    "[img2img]": "[img2img]",
    "shortcode for compatibility with the latest A1111 WebUI": "shortcode for compatibility with the latest A1111 WebUI",
    "Updated the look of generated result text": "Updated the look of generated result text",
    "Updated the promo panel with info about the new DemonCrawl Avatar Generator": "Updated the promo panel with info about the new DemonCrawl Avatar Generator",
    "7.0.0 - 28 January 2023": "7.0.0 - 28 January 2023",
    "to install.py to enable natural language processing features": "to install.py to enable natural language processing features",
    "[synonyms]": "[synonyms]",
    "[antonyms]": "[antonyms]",
    "[hypernyms]": "[hypernyms]",
    "[hyponyms]": "[hyponyms]",
    "shortcode now supports the optional": "shortcode now supports the optional",
    "The above arguments provide compatibility with Inpaint Sketch mode, albeit with some workarounds for A1111 limitations": "The above arguments provide compatibility with Inpaint Sketch mode, albeit with some workarounds for A1111 limitations",
    "[switch]": "[switch]",
    "shortcode now supports advanced expressions": "shortcode now supports advanced expressions",
    "Rewrote Wizard function generator for better layout handling": "Rewrote Wizard function generator for better layout handling",
    "Fixed issue with": "Fixed issue with",
    "[for]": "[for]",
    "Fixed issue with Unprompted seed locking the main seed": "Fixed issue with Unprompted seed locking the main seed",
    "Fixed issue with dropdown and radio Wizard UI delimiters": "Fixed issue with dropdown and radio Wizard UI delimiters",
    "Fixed SyntaxWarning related to Wizard function generator": "Fixed SyntaxWarning related to Wizard function generator",
    "6.0.0 - 25 January 2023": "6.0.0 - 25 January 2023",
    "You can now change the active SD checkpoint with": "You can now change the active SD checkpoint with",
    "[set sd_model]": "[set sd_model]",
    "[instance2mask]": "[instance2mask]",
    "shortcode by WeberSamuel (PR #48)": "shortcode by WeberSamuel (PR #48)",
    "[invert_mask]": "[invert_mask]",
    "[enable_multi_images]": "[enable_multi_images]",
    "shortcode now supports GPU (PR #48)": "shortcode now supports GPU (PR #48)",
    "arguments:": "arguments:",
    "neg_precision": "neg_precision",
    ",": ",",
    "neg_padding": "neg_padding",
    "neg_smoothing": "neg_smoothing",
    "by WeberSamuel (PR #48)": "by WeberSamuel (PR #48)",
    "show": "show",
    "will also append a segmentation mask (PR #48)": "will also append a segmentation mask (PR #48)",
    "New UI option": "New UI option",
    "allows you to reproduce images that feature shortcodes with randomness, such as": "allows you to reproduce images that feature shortcodes with randomness, such as",
    "[choose]": "[choose]",
    "Wizard Function default values are no longer written to ui-config.json": "Wizard Function default values are no longer written to ui-config.json",
    "syntax for compatibility with latest A1111": "syntax for compatibility with latest A1111",
    "Fixed a rounding issue with Wizard shortcode number fields": "Fixed a rounding issue with Wizard shortcode number fields",
    "The Manual and Starter Guide have been reorganized into collapsible sections": "The Manual and Starter Guide have been reorganized into collapsible sections",
    "Moved all included templates into": "Moved all included templates into",
    "templates\\common": "templates\\common",
    "for simplicity": "for simplicity",
    "5.2.0 - 24 January 2023": "5.2.0 - 24 January 2023",
    "[set]": "[set]",
    "_choices": "_choices",
    "argument which accepts an array of valid values": "argument which accepts an array of valid values",
    "shortcode now supports the Wizard UI": "shortcode now supports the Wizard UI",
    "_placeholder": "_placeholder",
    "[sets]": "[sets]",
    "shortcode has been rewritten to pass off its arguments to": "shortcode has been rewritten to pass off its arguments to",
    ", which means it now supports all current and future system arguments of": ", which means it now supports all current and future system arguments of",
    "Wizard Functions now support": "Wizard Functions now support",
    "dropdown": "dropdown",
    "radio": "radio",
    "slider": "slider",
    "as valid": "as valid",
    "_ui": "_ui",
    "types": "types",
    "Wizard Function textboxes show the": "Wizard Function textboxes show the",
    "content as a placeholder": "content as a placeholder",
    "Wizard Functions will now include a gr.Label title element by default": "Wizard Functions will now include a gr.Label title element by default",
    "The Wizard shortcode parser now supports": "The Wizard shortcode parser now supports",
    "[base_dir]": "[base_dir]",
    "which is useful for linking to files within the template directory (note that": "which is useful for linking to files within the template directory (note that",
    "this function is broken": "this function is broken",
    "in the version of Gradio that A1111 currently uses)": "in the version of Gradio that A1111 currently uses)",
    "Updated the manual": "Updated the manual",
    "Renamed the": "Renamed the",
    "lib": "lib",
    "folder to": "folder to",
    "lib_unprompted": "lib_unprompted",
    "in order to resolve import calls conflicting with other extensions, possibly due to a flaw in the A1111 extension framework (more research needed)": "in order to resolve import calls conflicting with other extensions, possibly due to a flaw in the A1111 extension framework (more research needed)",
    "5.1.0 - 23 January 2023": "5.1.0 - 23 January 2023",
    "The Wizard now includes Function mode, which houses custom UIs for your": "The Wizard now includes Function mode, which houses custom UIs for your",
    "[file]": "[file]",
    "example_function.txt": "example_function.txt",
    "to demonstrate the basics of the Wizard Function mode": "to demonstrate the basics of the Wizard Function mode",
    "The Wizard auto-include option is now determined on a per-shortcode or function basis": "The Wizard auto-include option is now determined on a per-shortcode or function basis",
    "Several fixes and workarounds to ensure compatibility with latest version of A1111 WebUI": "Several fixes and workarounds to ensure compatibility with latest version of A1111 WebUI",
    "Config.ui.wizard_autoinclude": "Config.ui.wizard_autoinclude",
    "temporarily removed for logistical reasons": "temporarily removed for logistical reasons",
    "CLIPSeg weights no longer included with this repo (the txt2mask shortcode will automatically download the weights if necessary)": "CLIPSeg weights no longer included with this repo (the txt2mask shortcode will automatically download the weights if necessary)",
    "5.0.0 - 2 January 2023": "5.0.0 - 2 January 2023",
    "New shortcode": "New shortcode",
    "[array]": "[array]",
    "which can be used to manage groups or lists of values": "which can be used to manage groups or lists of values",
    "padding": "padding",
    "argument now supports negative values": "argument now supports negative values",
    "argument now supports advanced expressions": "argument now supports advanced expressions",
    "_weighted": "_weighted",
    "argument now supports floats": "argument now supports floats",
    "function can return formatted lists, including those created by": "function can return formatted lists, including those created by",
    "New config": "New config",
    "ui": "ui",
    "settings for customizing the open state of accordion menus": "settings for customizing the open state of accordion menus",
    "New button in the About tab to quickly open your templates folder": "New button in the About tab to quickly open your templates folder",
    "[eval]": "[eval]",
    "shortcode now supports a": "shortcode now supports a",
    "sigmoid()": "sigmoid()",
    "distribution curve function": "distribution curve function",
    "New function": "New function",
    "is_system_arg()": "is_system_arg()",
    "to simplify the skipping of certain shortcode arguments": "to simplify the skipping of certain shortcode arguments",
    "Rewrote the": "Rewrote the",
    "implementation (PR #38 - thank you, @credman0!)": "implementation (PR #38 - thank you, @credman0!)",
    "default value of": "default value of",
    "has changed from 0 to 20": "has changed from 0 to 20",
    "No longer need to specify entire sub-dictionary blocks in": "No longer need to specify entire sub-dictionary blocks in",
    "config_user.json": "config_user.json",
    "to apply partial changes, thanks to flatdict library": "to apply partial changes, thanks to flatdict library",
    "[config]": "[config]",
    "shortcode also supports the flatdict library mentioned above": "shortcode also supports the flatdict library mentioned above",
    "Workaround for Gradio checkbox value being overwritten by A1111 stock config": "Workaround for Gradio checkbox value being overwritten by A1111 stock config",
    "4.3.1 - 29 December 2022": "4.3.1 - 29 December 2022",
    "Unnecessary Javascript file": "Unnecessary Javascript file",
    "4.3.0 - 27 December 2022": "4.3.0 - 27 December 2022",
    "New Wizard panel, an experimental GUI shortcode builder": "New Wizard panel, an experimental GUI shortcode builder",
    "New config section": "New config section",
    "for adjusting the default appearance of the extension": "for adjusting the default appearance of the extension",
    "for a more convenient approach to weighing the list of options": "for a more convenient approach to weighing the list of options",
    "Minor interface improvements": "Minor interface improvements",
    "Fixed an issue related to txt2mask in the new version of A1111 WebUI": "Fixed an issue related to txt2mask in the new version of A1111 WebUI",
    "Fixed an issue related to the postprocess() routine in the new version of A1111 WebUI": "Fixed an issue related to the postprocess() routine in the new version of A1111 WebUI",
    "4.2.1 - 23 December 2022": "4.2.1 - 23 December 2022",
    "Fixed an issue related to": "Fixed an issue related to",
    "4.2.0 - 22 December 2022": "4.2.0 - 22 December 2022",
    "[file2mask]": "[file2mask]",
    "that allows you to modify or replace your img2img mask with arbitrary files": "that allows you to modify or replace your img2img mask with arbitrary files",
    "[filelist]": "[filelist]",
    "that returns a delimited string containing the full paths of all files in a given path": "that returns a delimited string containing the full paths of all files in a given path",
    "[length]": "[length]",
    "that returns the number of items in a delimited string": "that returns the number of items in a delimited string",
    "shortcode utilizes the new refined CLIPseg weights": "shortcode utilizes the new refined CLIPseg weights",
    "legacy_weights": "legacy_weights",
    "which will fallback to the old weights": "which will fallback to the old weights",
    "which lets you define the sharpness of your mask selection": "which lets you define the sharpness of your mask selection",
    "which lets you store the percentage of the canvas that your text selection occupies": "which lets you store the percentage of the canvas that your text selection occupies",
    "shortcode can now return multiple variables": "shortcode can now return multiple variables",
    "shortcode allows you to specify a separator when returning multiple variables via": "shortcode allows you to specify a separator when returning multiple variables via",
    "_sep": "_sep",
    "_encoding": "_encoding",
    "which lets you change the expected encoding type": "which lets you change the expected encoding type",
    "Improved error handling for the": "Improved error handling for the",
    "Minor improvements to the Manual and Readme": "Minor improvements to the Manual and Readme",
    "4.1.0 - 14 December 2022": "4.1.0 - 14 December 2022",
    "after()": "after()",
    "routine that allows Unprompted to modify the outcome of a generation": "routine that allows Unprompted to modify the outcome of a generation",
    "[after]": "[after]",
    "that allows you to process text post-generation": "that allows you to process text post-generation",
    ", which is used inside of": ", which is used inside of",
    "for appending an img2img task to the output, effectively replacing my old txt2img2img script": "for appending an img2img task to the output, effectively replacing my old txt2img2img script",
    "[img2img_autosize]": "[img2img_autosize]",
    "that automatically adjusts the width and height parameters in img2img mode based on the proportions of the input image": "that automatically adjusts the width and height parameters in img2img mode based on the proportions of the input image",
    "[init_image]": "[init_image]",
    "that loads an image from the given filepath for use with img2img": "that loads an image from the given filepath for use with img2img",
    "New config options": "New config options",
    "templates.default": "templates.default",
    "templates.default_negative": "templates.default_negative",
    "that let you apply certain shortcodes to every run": "that let you apply certain shortcodes to every run",
    "which will append the final image mask to your generation output": "which will append the final image mask to your generation output",
    "Fixed an issue with advanced expressions and multi-word string values": "Fixed an issue with advanced expressions and multi-word string values",
    "4.0.0 - 11 December 2022": "4.0.0 - 11 December 2022",
    "which is a port of my script by the same name": "which is a port of my script by the same name",
    "Collapsible menus to docs": "Collapsible menus to docs",
    "\"Enabled\" checkbox in the extension UI as a convenient way of bypassing Unprompted": "\"Enabled\" checkbox in the extension UI as a convenient way of bypassing Unprompted",
    "The extension now features inline resources, including the announcements, changelog, manual and starter guide": "The extension now features inline resources, including the announcements, changelog, manual and starter guide",
    "Redesigned the extension interface": "Redesigned the extension interface",
    "The Dry Run feature has been decoupled from the WebUI's \"Generate\" button, meaning it no longer generates a dummy image": "The Dry Run feature has been decoupled from the WebUI's \"Generate\" button, meaning it no longer generates a dummy image",
    "delimiter is now specified in the config as": "delimiter is now specified in the config as",
    "syntax.delimiter": "syntax.delimiter",
    "Custom CSS and Javascript for handling the collapsible advertisement in favor of native Gradio elements": "Custom CSS and Javascript for handling the collapsible advertisement in favor of native Gradio elements",
    "3.0.0 - 10 December 2022": "3.0.0 - 10 December 2022",
    "[info]": "[info]",
    "clip_count": "clip_count",
    "Fixed an issue with the negative prompt in batch sizes greater than 2": "Fixed an issue with the negative prompt in batch sizes greater than 2",
    "[chance]": "[chance]",
    "shortcode no longer supports": "shortcode no longer supports",
    "_probability": "_probability",
    "as the first argument now automatically accepts expressions and secondary shortcode tags": "as the first argument now automatically accepts expressions and secondary shortcode tags",
    "2.0.2 - 7 December 2022": "2.0.2 - 7 December 2022",
    "Overhauled Github README.md": "Overhauled Github README.md",
    "Possibly fixed compatibility issue with Dynamic Prompts": "Possibly fixed compatibility issue with Dynamic Prompts",
    "2.0.1 - 7 December 2022": "2.0.1 - 7 December 2022",
    "shortcode will throw a soft error if the provided filepath is not valid, rather than completely aborting Unprompted (Issue #23)": "shortcode will throw a soft error if the provided filepath is not valid, rather than completely aborting Unprompted (Issue #23)",
    "Fixed a string truncation issue related to the sanitization filter (Issue #26)": "Fixed a string truncation issue related to the sanitization filter (Issue #26)",
    "2.0.0 - 7 December 2022": "2.0.0 - 7 December 2022",
    "Implemented advanced expression support for nearly all shortcodes": "Implemented advanced expression support for nearly all shortcodes",
    "[do]": "[do]",
    "for \"do until\" style loops": "for \"do until\" style loops",
    "[min]": "[min]",
    "for returning the value of the smallest variable among the arguments": "for returning the value of the smallest variable among the arguments",
    "[max]": "[max]",
    "for returning the value of the greatest variable among the arguments": "for returning the value of the greatest variable among the arguments",
    "[unset]": "[unset]",
    "that removes one or more variables from memory": "that removes one or more variables from memory",
    "parse_advanced": "parse_advanced",
    "that consolidates calls to simpleeval": "that consolidates calls to simpleeval",
    "shortcode can now return multiple options": "shortcode can now return multiple options",
    "argument, which is a string delimeter used when returning multiple options": "argument, which is a string delimeter used when returning multiple options",
    "string_count": "string_count",
    "argument, which returns the number of matching strings in the content": "argument, which returns the number of matching strings in the content",
    "[replace]": "[replace]",
    "_count": "_count",
    "variable, which defines the number of occurances to replace": "variable, which defines the number of occurances to replace",
    "shortcodes now support the": "shortcodes now support the",
    "argument, which will bypass the shortcode if the variable(s) already exist": "argument, which will bypass the shortcode if the variable(s) already exist",
    "Advanced expression support can be toggled in config.json": "Advanced expression support can be toggled in config.json",
    "New example": "New example",
    "reverse_string.txt": "reverse_string.txt",
    "Secondary shortcode tags have been changed from": "Secondary shortcode tags have been changed from",
    "for compatibility with advanced expression statements": "for compatibility with advanced expression statements",
    "Updated example": "Updated example",
    "update_variable.txt": "update_variable.txt",
    "Fixed potential crash related to": "Fixed potential crash related to",
    "autocast": "autocast",
    "function": "function",
    "Fixed a bug in the": "Fixed a bug in the",
    "Fixed a couple bugs related to advanced expressions": "Fixed a couple bugs related to advanced expressions",
    "[repeat]": "[repeat]",
    "_times": "_times",
    "_var": "_var",
    "Important Note:": "Important Note:",
    "the change to secondary shortcode tags will unfortunately break some existing templates. In general, I try to avoid making such changes, but in this case it was the best way to get secondary tags to interact well with advanced expressions - the <> characters conflicted with less-than, greater-than conditional checks. On the plus side, we can now do stuff like this: [if \"{file some_script} < 2\"]print me[/if]. Should be quite powerful!": "the change to secondary shortcode tags will unfortunately break some existing templates. In general, I try to avoid making such changes, but in this case it was the best way to get secondary tags to interact well with advanced expressions - the <> characters conflicted with less-than, greater-than conditional checks. On the plus side, we can now do stuff like this: [if \"{file some_script} < 2\"]print me[/if]. Should be quite powerful!",
    "If you wish to revert this behavior (not recommended) you can do so by creating a file called config_user.json, setting advanced_expressions to false, tag_start_alt to <, and tag_start_end to >. Refer to config.json for exact formatting. Be aware that these changes will break advanced expressions.": "If you wish to revert this behavior (not recommended) you can do so by creating a file called config_user.json, setting advanced_expressions to false, tag_start_alt to <, and tag_start_end to >. Refer to config.json for exact formatting. Be aware that these changes will break advanced expressions.",
    "1.2.0 - 2 December 2022": "1.2.0 - 2 December 2022",
    "atomic shortcode for setting multiple variables at once": "atomic shortcode for setting multiple variables at once",
    "can now read user variables": "can now read user variables",
    "1.1.0 - 2 December 2022": "1.1.0 - 2 December 2022",
    "shortcode, as in for loops": "shortcode, as in for loops",
    "[casing]": "[casing]",
    "shortcode powered by @dmlls casefy library": "shortcode powered by @dmlls casefy library",
    "[if]": "[if]",
    "[while]": "[while]",
    "shortcodes now support advanced expressions via simpleeval, e.g.": "shortcodes now support advanced expressions via simpleeval, e.g.",
    "[if \"var_a==10 and var_b<=50\"]": "[if \"var_a==10 and var_b<=50\"]",
    "shortcodes now support": "shortcodes now support",
    "as an operator type for": "as an operator type for",
    "_is": "_is",
    "1.0.0 - 1 December 2022": "1.0.0 - 1 December 2022",
    "shortcode that prints metadata about the content (either": "shortcode that prints metadata about the content (either",
    "character_count": "character_count",
    "word_count": "word_count",
    "at the moment)": "at the moment)",
    "[substring]": "[substring]",
    "shortcode for slicing content": "shortcode for slicing content",
    "shortcode now supports the setting of variables through keyword arguments, which effectively allows you to use this shortcode like a function in programming": "shortcode now supports the setting of variables through keyword arguments, which effectively allows you to use this shortcode like a function in programming",
    "shortcode now supports optional": "shortcode now supports optional",
    "_default": "_default",
    "argument, the value of which is returned if the selected variable does not exist": "argument, the value of which is returned if the selected variable does not exist",
    "_from": "_from",
    "_to": "_to",
    "arguments which can process secondary shortcode tags": "arguments which can process secondary shortcode tags",
    "random_emphasis.txt": "random_emphasis.txt",
    "shortcode now utilizes the simpleeval library by @danthedeckie, which should be safe for networked environments (no gurantees though - use Unprompted at your own risk)": "shortcode now utilizes the simpleeval library by @danthedeckie, which should be safe for networked environments (no gurantees though - use Unprompted at your own risk)",
    "Check": "Check",
    "shortcodes/basic/eval.py": "shortcodes/basic/eval.py",
    "for instructions on reverting the shortcode to its old, strictly-for-local-use behavior": "for instructions on reverting the shortcode to its old, strictly-for-local-use behavior",
    "The tab character is now replaced with a blank string instead of space": "The tab character is now replaced with a blank string instead of space",
    "0.10.0 - 30 November 2022": "0.10.0 - 30 November 2022",
    "Replaced": "Replaced",
    "n_temp": "n_temp",
    "n_final": "n_final",
    "config settings with": "config settings with",
    "sanitize_before": "sanitize_before",
    "sanitize_after": "sanitize_after",
    "that let you define any number of characters to modify before/after processing": "that let you define any number of characters to modify before/after processing",
    "Tab character (": "Tab character (",
    "\\t": "\\t",
    ") is now ignored by default, which will hopefully make it easier to format complex templates for readability": ") is now ignored by default, which will hopefully make it easier to format complex templates for readability",
    "All string sanitization logic has been moved into the": "All string sanitization logic has been moved into the",
    "process_string()": "process_string()",
    "Fixed an issue with": "Fixed an issue with",
    "negative_prompt": "negative_prompt",
    "0.9.0 - 29 November 2022": "0.9.0 - 29 November 2022",
    "Updated": "Updated",
    "to support the latest version of Automatic1111's WebUI, which permits batch support for negative prompts": "to support the latest version of Automatic1111's WebUI, which permits batch support for negative prompts",
    "0.8.0 - 13 November 2022": "0.8.0 - 13 November 2022",
    "New system variable": "New system variable",
    "batch_index": "batch_index",
    "for making decisions based on the progress into a batch run": "for making decisions based on the progress into a batch run",
    "shortcode now accepts": "shortcode now accepts",
    "_case": "_case",
    "which bypasses the random selection with a given number or variable": "which bypasses the random selection with a given number or variable",
    "0.7.0 - 11 November 2022": "0.7.0 - 11 November 2022",
    "delimiter is now specified in config.json (defaults to": "delimiter is now specified in config.json (defaults to",
    "|": "|",
    ")": ")",
    "parse_filepath(string, context)": "parse_filepath(string, context)",
    "function in shared.py that supports both relative and absolute path handling": "function in shared.py that supports both relative and absolute path handling",
    "Merged": "Merged",
    ".gitignore": ".gitignore",
    "PR (thank you @MaikoTan!)": "PR (thank you @MaikoTan!)",
    "0.6.0 - 6 November 2022": "0.6.0 - 6 November 2022",
    "[elif]": "[elif]",
    "shortcode now accepts floats, e.g. 4.6 has a 60% chance of repeating 5 times instead of 4": "shortcode now accepts floats, e.g. 4.6 has a 60% chance of repeating 5 times instead of 4",
    "which is a string delimiter to insert after each output, excluding the final output": "which is a string delimiter to insert after each output, excluding the final output",
    "autocast()": "autocast()",
    "function in shared.py that will convert a variable to str, int, or float automatically": "function in shared.py that will convert a variable to str, int, or float automatically",
    "templates/examples": "templates/examples",
    "for snippets of code that demonstrate cool ways of combining shortcodes you may not have considered": "for snippets of code that demonstrate cool ways of combining shortcodes you may not have considered",
    "outputting its content once more than intended": "outputting its content once more than intended",
    "0.5.1 - 5 November 2022": "0.5.1 - 5 November 2022",
    "converting to float in situations where int is preferred": "converting to float in situations where int is preferred",
    "0.5.0 - 5 November 2022": "0.5.0 - 5 November 2022",
    "Button for dismissing the ad": "Button for dismissing the ad",
    "The ad will be dismissed automatically if you purchase the Fantasy Template Pack": "The ad will be dismissed automatically if you purchase the Fantasy Template Pack",
    "0.4.0 - 4 November 2022": "0.4.0 - 4 November 2022",
    "Config option": "Config option",
    "batch_support": "batch_support",
    "which, if enabled, will generate random prompts for every image in a batch as opposed to using the same prompt for the entire batch": "which, if enabled, will generate random prompts for every image in a batch as opposed to using the same prompt for the entire batch",
    "0.3.0 - 4 November 2022": "0.3.0 - 4 November 2022",
    "Support for infinite nesting of secondary shortcode tags": "Support for infinite nesting of secondary shortcode tags",
    "for looping content until the condition returns false": "for looping content until the condition returns false",
    "now supports": "now supports",
    "_sides": "_sides",
    "which determines the upper bound of the chance roll (default is 100)": "which determines the upper bound of the chance roll (default is 100)",
    "_operator": "_operator",
    "argument has been renamed to": "argument has been renamed to",
    "for readability": "for readability",
    "0.2.0 - 4 November 2022": "0.2.0 - 4 November 2022",
    "[##]": "[##]",
    "for multiline comments": "for multiline comments",
    "Documentation for": "Documentation for",
    "config.json": "config.json",
    "_any": "_any",
    "which flips from \"and\" to \"or\" multivar processing": "which flips from \"and\" to \"or\" multivar processing",
    "which determines the comparison logic for your arguments": "which determines the comparison logic for your arguments",
    "Overhauled codebase in order to load as an A1111 extension rather than a script, please re-review the installation instructions!": "Overhauled codebase in order to load as an A1111 extension rather than a script, please re-review the installation instructions!",
    "Renamed": "Renamed",
    "DOCUMENTATION.md": "DOCUMENTATION.md",
    "MANUAL.md": "MANUAL.md",
    "0.1.1 - 2 November 2022": "0.1.1 - 2 November 2022",
    "_before": "_before",
    "_after": "_after",
    "arguments": "arguments",
    "now supports secondary shortcode tags": "now supports secondary shortcode tags",
    "now strips leading and trailing newline characters": "now strips leading and trailing newline characters",
    "0.1.0 - 1 November 2022": "0.1.0 - 1 November 2022",
    "[case]": "[case]",
    "shortcodes": "shortcodes",
    "is_equal()": "is_equal()",
    "function to Unprompted object that checks for loose equality of two variables": "function to Unprompted object that checks for loose equality of two variables",
    "_append": "_append",
    "_prepend": "_prepend",
    "behavior of": "behavior of",
    "when used with int values": "when used with int values",
    "0.0.1 - 31 October 2022": "0.0.1 - 31 October 2022",
    "Initial release": "Initial release",
    "Shortcode syntax is subject to change based on community feedback.": "Shortcode syntax is subject to change based on community feedback.",
    "If you encounter any confusing, incomplete, or out-of-date information here, please do not hesitate to open an issue. I appreciate it!": "If you encounter any confusing, incomplete, or out-of-date information here, please do not hesitate to open an issue. I appreciate it!",
    "Proficiency": "Proficiency",
    "Atomic vs Block Shortcodes": "Atomic vs Block Shortcodes",
    "Unprompted supports two types of shortcodes:": "Unprompted supports two types of shortcodes:",
    "Block shortcodes that require an end tag, e.g.": "Block shortcodes that require an end tag, e.g.",
    "[set my_var]This is a block shortcode[/set]": "[set my_var]This is a block shortcode[/set]",
    "Atomic shortcodes that are self-closing, e.g.": "Atomic shortcodes that are self-closing, e.g.",
    "[get my_var]": "[get my_var]",
    "These are mutually exclusive. Shortcodes must be defined as one or the other.": "These are mutually exclusive. Shortcodes must be defined as one or the other.",
    "The type is declared by including one of the following functions in your": "The type is declared by including one of the following functions in your",
    ".py": ".py",
    "file:": "file:",
    "def run_block(self, pargs, kwargs, context, content):": "def run_block(self, pargs, kwargs, context, content):",
    "def run_atomic(self, pargs, kwargs, context):": "def run_atomic(self, pargs, kwargs, context):",
    "Atomic shortcodes do not receive a": "Atomic shortcodes do not receive a",
    "content": "content",
    "variable.": "variable.",
    "Understanding the Processing Chain": "Understanding the Processing Chain",
    "It is important to understand that": "It is important to understand that",
    "inner shortcodes are processed before outer shortcodes": "inner shortcodes are processed before outer shortcodes",
    "This has a number of advantages, but it does present an unintuitive situation: conditional functions.": "This has a number of advantages, but it does present an unintuitive situation: conditional functions.",
    "Consider the following code:": "Consider the following code:",
    "[if my_var=1][set another_var]0[/set][/if]": "[if my_var=1][set another_var]0[/set][/if]",
    "Anyone with a background in programming would take this to mean that": "Anyone with a background in programming would take this to mean that",
    "another_var": "another_var",
    "is set to 0 if my_var equals 1... but this is not the case here.": "is set to 0 if my_var equals 1... but this is not the case here.",
    "In Unprompted,": "In Unprompted,",
    "will equal 0 regardless of the outcome of the": "will equal 0 regardless of the outcome of the",
    "statement. This is due to the fact that": "statement. This is due to the fact that",
    "is the innermost shortcode and thus evaluated before": "is the innermost shortcode and thus evaluated before",
    "The following section offers a solution.": "The following section offers a solution.",
    "Secondary Shortcode Tags": "Secondary Shortcode Tags",
    "Unprompted allows you to write tags using": "Unprompted allows you to write tags using",
    "instead of": "instead of",
    "[]": "[]",
    "to defer processing.": "to defer processing.",
    "For example, if you want to set": "For example, if you want to set",
    "to 0 when": "to 0 when",
    "my_var": "my_var",
    "equals 1, you should do it like this:": "equals 1, you should do it like this:",
    "[if my_var=1]{set another_var}0{/set}[/if]": "[if my_var=1]{set another_var}0{/set}[/if]",
    "This way, the inner shortcode is not processed until": "This way, the inner shortcode is not processed until",
    "it is returned by the outer": "it is returned by the outer",
    "statement.": "statement.",
    "Secondary shortcode tags give us a couple additional benefits:": "Secondary shortcode tags give us a couple additional benefits:",
    "If your shortcode is computationally expensive, you can avoid running it unless the outer shortcode succeeds. This is good for performance.": "If your shortcode is computationally expensive, you can avoid running it unless the outer shortcode succeeds. This is good for performance.",
    "You can pass them as arguments in shortcodes that support it.": "You can pass them as arguments in shortcodes that support it.",
    "For example, if you want to run the": "For example, if you want to run the",
    "shortcode with dynamic probability, you can do it like this:": "shortcode with dynamic probability, you can do it like this:",
    "[chance \"{get my_var}\"]content[/chance]": "[chance \"{get my_var}\"]content[/chance]",
    "Secondary shortcode tags can have infinite nested depth. The number of": "Secondary shortcode tags can have infinite nested depth. The number of",
    "around a shortcode indicates its nested level. Consider this example:": "around a shortcode indicates its nested level. Consider this example:",
    "[if my_var=1]\n{if another_var=1}\n{{if third_var=1}}\n{{{if fourth_var=1}}}\nwow\n{{{/if}}}\n{{/if}}\n{/if}\n[/if]": "[if my_var=1]\n{if another_var=1}\n{{if third_var=1}}\n{{{if fourth_var=1}}}\nwow\n{{{/if}}}\n{{/if}}\n{/if}\n[/if]",
    "Whenever the": "Whenever the",
    "statement succeeds, it will decrease the nested level of the resulting content. Our example returns:": "statement succeeds, it will decrease the nested level of the resulting content. Our example returns:",
    "[if another_var=1]\n{if third_var=1}\n{{if fourth_var=1}}\nwow\n{{/if}}\n{/if}\n[/if]": "[if another_var=1]\n{if third_var=1}\n{{if fourth_var=1}}\nwow\n{{/if}}\n{/if}\n[/if]",
    "Rinse and repeat until no": "Rinse and repeat until no",
    "remain.": "remain.",
    "Advanced Expressions": "Advanced Expressions",
    "Most shortcodes support programming-style evaluation via the": "Most shortcodes support programming-style evaluation via the",
    "This allows you to enter complex expressions in ways that would not be possible with standard shortcode arguments. For example, the": "This allows you to enter complex expressions in ways that would not be possible with standard shortcode arguments. For example, the",
    "shortcode expects unique variable keys and a singular type of comparison logic, which means you": "shortcode expects unique variable keys and a singular type of comparison logic, which means you",
    "cannot": "cannot",
    "do something like this:": "do something like this:",
    "[if var_a>=1 var_a!=5]": "[if var_a>=1 var_a!=5]",
    "However, with advanced expressions, you definitely can! Simply put quotes around your expression and Unprompted will parse it with simpleeval. Check it out:": "However, with advanced expressions, you definitely can! Simply put quotes around your expression and Unprompted will parse it with simpleeval. Check it out:",
    "[if \"var_a>=10 and var_a!=5\"]Print me[/if]": "[if \"var_a>=10 and var_a!=5\"]Print me[/if]",
    "If you wish to compare strings, use": "If you wish to compare strings, use",
    "is": "is",
    "and single quotes as shown below:": "and single quotes as shown below:",
    "[if \"var_a is 'man' or var_a is 'woman'\"]My variable is either man or woman[/if]": "[if \"var_a is 'man' or var_a is 'woman'\"]My variable is either man or woman[/if]",
    "You can even mix advanced expressions with shortcodes. Check this out:": "You can even mix advanced expressions with shortcodes. Check this out:",
    "[if \"var_a is {file test_one} or var_a is {choose}1|2|3{/choose}\"]": "[if \"var_a is {file test_one} or var_a is {choose}1|2|3{/choose}\"]",
    "The secondary shortcode tags are processed first": "The secondary shortcode tags are processed first",
    "and then the resulting string is processed by simpleeval.": "and then the resulting string is processed by simpleeval.",
    "For more information on constructing advanced expressions, check the documentation linked above.": "For more information on constructing advanced expressions, check the documentation linked above.",
    "Escaping Characters": "Escaping Characters",
    "Use the backtick to print a shortcode as a literal part of your prompt. This may be useful if you wish to take advantage of the prompt editing features of the A1111 WebUI (which are denoted with square brackets and could thus conflict with Unprompted shortcodes.)": "Use the backtick to print a shortcode as a literal part of your prompt. This may be useful if you wish to take advantage of the prompt editing features of the A1111 WebUI (which are denoted with square brackets and could thus conflict with Unprompted shortcodes.)",
    "Note: you only need to put a single backtick at the start of the shortcode to escape the entire sequence. Inner shortcodes will be processed as normal.": "Note: you only need to put a single backtick at the start of the shortcode to escape the entire sequence. Inner shortcodes will be processed as normal.",
    "Also note: if a shortcode is undefined, Unprompted will print it as a literal as if you had escaped it.": "Also note: if a shortcode is undefined, Unprompted will print it as a literal as if you had escaped it.",
    "Photo of a `[cat|dog]": "Photo of a `[cat|dog]",
    "System Variables": "System Variables",
    "In addition to all of the Stable Diffusion variables exposed by Automatic1111's WebUI, Unprompted gives you access to the following variables:": "In addition to all of the Stable Diffusion variables exposed by Automatic1111's WebUI, Unprompted gives you access to the following variables:",
    "An integer that correponds to your progress in a batch run. For example, if your batch count is set to 5, then": "An integer that correponds to your progress in a batch run. For example, if your batch count is set to 5, then",
    "will return a value from 0 to 4.": "will return a value from 0 to 4.",
    "sd_model": "sd_model",
    "You can set this variable to the name of a Stable Diffusion checkpoint, and Unprompted will load that checkpoint at the start of inference. This variable is powered by the WebUI's": "You can set this variable to the name of a Stable Diffusion checkpoint, and Unprompted will load that checkpoint at the start of inference. This variable is powered by the WebUI's",
    "get_closet_checkpoint_match()": "get_closet_checkpoint_match()",
    "function, which means that your model name does not have to be 100% accurate - but you should strive to use a string that's as accurate as possible.": "function, which means that your model name does not have to be 100% accurate - but you should strive to use a string that's as accurate as possible.",
    "Why some shortcode arguments begin with an _underscore": "Why some shortcode arguments begin with an _underscore",
    "We use underscores to denote optional system arguments in shortcodes that may also accept dynamic, user-defined arguments.": "We use underscores to denote optional system arguments in shortcodes that may also accept dynamic, user-defined arguments.",
    "Take a look at": "Take a look at",
    "as an example.": "as an example.",
    "allows you to modify a string with arbitrary before-after argument pairings, e.g.": "allows you to modify a string with arbitrary before-after argument pairings, e.g.",
    "[replace this=that red=blue]": "[replace this=that red=blue]",
    "However,": "However,",
    "also features system arguments like": "also features system arguments like",
    "and so the shortcode must have a way to differentiate between the two types.": "and so the shortcode must have a way to differentiate between the two types.",
    "In short, if the argument begins with": "In short, if the argument begins with",
    "_": "_",
    ", the program will assume it is a system argument of some kind.": ", the program will assume it is a system argument of some kind.",
    "That said, we're still ironing out the methodology for underscores - at the moment, some arguments may use underscores where it isn't strictly necessary. If you find any such cases feel free to open an Issue or Discussion Thread about it.": "That said, we're still ironing out the methodology for underscores - at the moment, some arguments may use underscores where it isn't strictly necessary. If you find any such cases feel free to open an Issue or Discussion Thread about it.",
    "The Wizard": "The Wizard",
    "What is the Wizard?": "What is the Wizard?",
    "The Unprompted WebUI extension has a dedicated panel called the Wizard. It is a GUI-based shortcode builder.": "The Unprompted WebUI extension has a dedicated panel called the Wizard. It is a GUI-based shortcode builder.",
    "Pressing": "Pressing",
    "\"Generate Shortcode\"": "\"Generate Shortcode\"",
    "will assemble a ready-to-use block of code that you can add to your prompts.": "will assemble a ready-to-use block of code that you can add to your prompts.",
    "Alternatively, you can enable": "Alternatively, you can enable",
    "which will add the shortcode to your prompts behind the scenes. This essentially lets you use Unprompted shortcodes as if they were standalone scripts. You can enable/disable this setting on a per-shortcode basis.": "which will add the shortcode to your prompts behind the scenes. This essentially lets you use Unprompted shortcodes as if they were standalone scripts. You can enable/disable this setting on a per-shortcode basis.",
    "The Wizard includes two distinct modes: Shortcodes and Functions.": "The Wizard includes two distinct modes: Shortcodes and Functions.",
    "Shortcodes Mode": "Shortcodes Mode",
    "This mode presents you with a list of all shortcodes that have a": "This mode presents you with a list of all shortcodes that have a",
    "ui()": "ui()",
    "block in their source code.": "block in their source code.",
    "You can add Wizard UI support to your own custom shortcodes by declaring a": "You can add Wizard UI support to your own custom shortcodes by declaring a",
    "function as shown below:": "function as shown below:",
    "def ui(self,gr):\n                gr.Radio(label=\"Mask blend mode 🡢 mode\",choices=[\"add\",\"subtract\",\"discard\"],value=\"add\",interactive=True)\n                gr.Checkbox(label=\"Show mask in output 🡢 show\")\n                gr.Checkbox(label=\"Use legacy weights 🡢 legacy_weights\")\n                gr.Number(label=\"Precision of selected area 🡢 precision\",value=100,interactive=True)\n                gr.Number(label=\"Padding radius in pixels 🡢 padding\",value=0,interactive=True)\n                gr.Number(label=\"Smoothing radius in pixels 🡢 smoothing\",value=20,interactive=True)\n                gr.Textbox(label=\"Negative mask prompt 🡢 negative_mask\",max_lines=1)\n                gr.Textbox(label=\"Save the mask size to the following variable 🡢 size_var\",max_lines=1)": "def ui(self,gr):\n                gr.Radio(label=\"Mask blend mode 🡢 mode\",choices=[\"add\",\"subtract\",\"discard\"],value=\"add\",interactive=True)\n                gr.Checkbox(label=\"Show mask in output 🡢 show\")\n                gr.Checkbox(label=\"Use legacy weights 🡢 legacy_weights\")\n                gr.Number(label=\"Precision of selected area 🡢 precision\",value=100,interactive=True)\n                gr.Number(label=\"Padding radius in pixels 🡢 padding\",value=0,interactive=True)\n                gr.Number(label=\"Smoothing radius in pixels 🡢 smoothing\",value=20,interactive=True)\n                gr.Textbox(label=\"Negative mask prompt 🡢 negative_mask\",max_lines=1)\n                gr.Textbox(label=\"Save the mask size to the following variable 🡢 size_var\",max_lines=1)",
    "The above code is the entirety of txt2mask's UI at the time of writing. We recommend examining the .py files of other shortcodes if you want to see additional examples of how to construct your UI.": "The above code is the entirety of txt2mask's UI at the time of writing. We recommend examining the .py files of other shortcodes if you want to see additional examples of how to construct your UI.",
    "Every possible shortcode argument is exposed in the UI, labeled in the form of": "Every possible shortcode argument is exposed in the UI, labeled in the form of",
    "Natural description 🡢 technical_argument_name": "Natural description 🡢 technical_argument_name",
    ". The Wizard only uses the technical_argument_name when constructing the final shortcode.": ". The Wizard only uses the technical_argument_name when constructing the final shortcode.",
    "There are a few reserved argument names that will modify the Wizard's behavior:": "There are a few reserved argument names that will modify the Wizard's behavior:",
    "verbatim": "verbatim",
    ": This will inject the field's value directly into the shortcode. Useful for shortcodes that can accept multiple, optional arguments that do not have pre-determined names.": ": This will inject the field's value directly into the shortcode. Useful for shortcodes that can accept multiple, optional arguments that do not have pre-determined names.",
    "str": "str",
    ": This will inject the field's value into the shortcode, enclosing it in quotation marks.": ": This will inject the field's value into the shortcode, enclosing it in quotation marks.",
    "int": "int",
    ": This will inject the field's value into the shortcode, casting it as an integer.": ": This will inject the field's value into the shortcode, casting it as an integer.",
    "This mode presents you with a list of txt files inside your": "This mode presents you with a list of txt files inside your",
    "Unprompted/templates": "Unprompted/templates",
    "directory that begin with a": "directory that begin with a",
    "block.": "block.",
    "By including this block in your file, Unprompted will parse the file for its": "By including this block in your file, Unprompted will parse the file for its",
    "[set x _new]": "[set x _new]",
    "statements and adapt those into a custom Wizard UI.": "statements and adapt those into a custom Wizard UI.",
    "argument means \"only set this variable if it doesn't already exist,\" which are generally the variables we want to show in a UI.": "argument means \"only set this variable if it doesn't already exist,\" which are generally the variables we want to show in a UI.",
    "block supports the optional": "block supports the optional",
    "name": "name",
    "argument which is a friendly name for your function shown in the functions dropdown menu.": "argument which is a friendly name for your function shown in the functions dropdown menu.",
    "The content of": "The content of",
    "is a description of your function to be rendered with": "is a description of your function to be rendered with",
    "Markdown": "Markdown",
    ", which means you can include rich content like pictures or links. It will show up at the top of your UI.": ", which means you can include rich content like pictures or links. It will show up at the top of your UI.",
    "block supports": "block supports",
    "which determines the type of UI element to render your variable as. Defaults to": "which determines the type of UI element to render your variable as. Defaults to",
    "textbox": "textbox",
    ". Here are the possible types:": ". Here are the possible types:",
    ": Ideal for strings. The content of your": ": Ideal for strings. The content of your",
    "block will be rendered as placeholder text.": "block will be rendered as placeholder text.",
    "number": "number",
    ": Ideal for integers.": ": Ideal for integers.",
    ": A list of radio buttons that are determined by the": ": A list of radio buttons that are determined by the",
    "argument, constructed as a delimited list.": "argument, constructed as a delimited list.",
    ": A dropdown menu that is populated by the": ": A dropdown menu that is populated by the",
    ": Limits selection to a range of numbers. You must also specify": ": Limits selection to a range of numbers. You must also specify",
    "_minimum": "_minimum",
    "_maximum": "_maximum",
    "_step": "_step",
    "(step size, normally 1) for this element to work properly.": "(step size, normally 1) for this element to work properly.",
    "The config file": "The config file",
    "Various aspects of Unprompted's behavior are controlled through": "Various aspects of Unprompted's behavior are controlled through",
    "unprompted/config.json": "unprompted/config.json",
    "If you wish to override the default settings, you should make another file at the same location called": "If you wish to override the default settings, you should make another file at the same location called",
    ". Modifications to the original config file will": ". Modifications to the original config file will",
    "not": "not",
    "be preserved between updates.": "be preserved between updates.",
    "Here are some of the settings you can modify:": "Here are some of the settings you can modify:",
    "debug (bool)": "debug (bool)",
    "When": "When",
    "True": "True",
    ", you will see a lot more diagnostic information printed to the console during a run. You should use this when creating your own shortcode, template, or when filing a bug report.": ", you will see a lot more diagnostic information printed to the console during a run. You should use this when creating your own shortcode, template, or when filing a bug report.",
    "advanced_expressions (bool)": "advanced_expressions (bool)",
    "This determines whether expressions will be processed by simpleeval. Disable for slightly better performance at the cost of breaking some templates.": "This determines whether expressions will be processed by simpleeval. Disable for slightly better performance at the cost of breaking some templates.",
    "template_directory (str)": "template_directory (str)",
    "This is the base directory for your text files.": "This is the base directory for your text files.",
    "txt_format (str)": "txt_format (str)",
    "This is the file extension that Unprompted will assume you're looking for with": "This is the file extension that Unprompted will assume you're looking for with",
    "syntax/sanitize_before (dict)": "syntax/sanitize_before (dict)",
    "This is a dictionary of strings that will be replaced at the start of processing. By default, Unprompted will swap newline and tab characters to the": "This is a dictionary of strings that will be replaced at the start of processing. By default, Unprompted will swap newline and tab characters to the",
    "\\\\n": "\\\\n",
    "placeholder.": "placeholder.",
    "syntax/sanitize_after (dict)": "syntax/sanitize_after (dict)",
    "This is a dictionary of strings that will be replaced after processing. By default, Unprompted will convert the": "This is a dictionary of strings that will be replaced after processing. By default, Unprompted will convert the",
    "placeholder to a space.": "placeholder to a space.",
    "syntax/tag_start (str)": "syntax/tag_start (str)",
    "This is the string that indicates the start of a shortcode.": "This is the string that indicates the start of a shortcode.",
    "syntax/tag_end (str)": "syntax/tag_end (str)",
    "This is the string that indicates the end of a shortcode.": "This is the string that indicates the end of a shortcode.",
    "syntax/tag_start_alt (str)": "syntax/tag_start_alt (str)",
    "This is the string that indicates the start of a secondary shortcode.": "This is the string that indicates the start of a secondary shortcode.",
    "syntax/tag_end_alt (str)": "syntax/tag_end_alt (str)",
    "This is the string that indicates the end of a secondary shortcode.": "This is the string that indicates the end of a secondary shortcode.",
    "syntax/tag_close (str)": "syntax/tag_close (str)",
    "This is the string that indicates the closing tag of a block-scoped shortcode.": "This is the string that indicates the closing tag of a block-scoped shortcode.",
    "syntax/tag_escape (str)": "syntax/tag_escape (str)",
    "This is the string that allows you to print a shortcode as a literal string, bypassing the shortcode processor.": "This is the string that allows you to print a shortcode as a literal string, bypassing the shortcode processor.",
    "Note that you only have to include this string once, before the shortcode, as opposed to in front of every bracket.": "Note that you only have to include this string once, before the shortcode, as opposed to in front of every bracket.",
    "templates/default (str)": "templates/default (str)",
    "This is the final string that will be processed by Unprompted, where": "This is the final string that will be processed by Unprompted, where",
    "*": "*",
    "is the user input.": "is the user input.",
    "The main purpose of this setting is for hardcoding shortcodes you want to run every time. For example:": "The main purpose of this setting is for hardcoding shortcodes you want to run every time. For example:",
    "[img2img_autosize]*": "[img2img_autosize]*",
    "templates/default_negative (str)": "templates/default_negative (str)",
    "Same as above, but for the negative prompt.": "Same as above, but for the negative prompt.",
    "Basic Shortcodes": "Basic Shortcodes",
    "This section describes all of the included basic shortcodes and their functionality.": "This section describes all of the included basic shortcodes and their functionality.",
    "[#]": "[#]",
    "Use this to write comments in your templates. Comments are ultimately discarded by Unprompted and will not affect your final output.": "Use this to write comments in your templates. Comments are ultimately discarded by Unprompted and will not affect your final output.",
    "[# This is my comment.]": "[# This is my comment.]",
    "Same as": "Same as",
    "but for multiline comments.": "but for multiline comments.",
    "[##]\nThis is my multiline comment.\nWe're still commenting.\nI can't believe it, we're doing 3 lines of text!\n[/##]": "[##]\nThis is my multiline comment.\nWe're still commenting.\nI can't believe it, we're doing 3 lines of text!\n[/##]",
    "[after step(int)]": "[after step(int)]",
    "Processes the content after the main task is complete.": "Processes the content after the main task is complete.",
    "This is particularly useful with the A1111 WebUI, as it gives you the ability to queue up additional tasks. For example, you can run img2img after txt2img from the same template.": "This is particularly useful with the A1111 WebUI, as it gives you the ability to queue up additional tasks. For example, you can run img2img after txt2img from the same template.",
    "Supports optional": "Supports optional",
    "step": "step",
    "argument which lets you control the order of multiple": "argument which lets you control the order of multiple",
    "blocks. Defaults to 0. For example, the": "blocks. Defaults to 0. For example, the",
    "[after 2]": "[after 2]",
    "block will execute before the": "block will execute before the",
    "[after 3]": "[after 3]",
    "Photo of a cat\n[after]\n        {sets prompt=\"Photo of a dog\" denoising_strength=0.75}\n        {img2img}\n[/after]": "Photo of a cat\n[after]\n        {sets prompt=\"Photo of a dog\" denoising_strength=0.75}\n        {img2img}\n[/after]",
    "Replaces the content with one or more random antonyms. This shortcode is powered by a combination of WordNet and Moby Thesaurus II. Does not require an online connection after first use (word databases are downloaded to disk.)": "Replaces the content with one or more random antonyms. This shortcode is powered by a combination of WordNet and Moby Thesaurus II. Does not require an online connection after first use (word databases are downloaded to disk.)",
    "The optional": "The optional",
    "argument allows you to specify the maximum number of antonyms to return. Defaults to -1, which returns all antonyms. The antonyms list is delimited by": "argument allows you to specify the maximum number of antonyms to return. Defaults to -1, which returns all antonyms. The antonyms list is delimited by",
    "Unprompted.Config.syntax.delimiter": "Unprompted.Config.syntax.delimiter",
    "include_self": "include_self",
    "positional argument determines whether the original content can be returned as a possible result. Defaults to False.": "positional argument determines whether the original content can be returned as a possible result. Defaults to False.",
    "enable_moby": "enable_moby",
    "keyword argument determines whether Moby Thesaurus II will be referenced. Defaults to True. On first use, the Moby Thesaurus will be downloaded to the": "keyword argument determines whether Moby Thesaurus II will be referenced. Defaults to True. On first use, the Moby Thesaurus will be downloaded to the",
    "folder - it is about 24 MB.": "folder - it is about 24 MB.",
    "enable_wordnet": "enable_wordnet",
    "keyword argument determines whether WordNet will be references. Defaults to True.": "keyword argument determines whether WordNet will be references. Defaults to True.",
    "It is worth noting that Moby does not have native antonym support. This shortcode first queries WordNet, the results of which are then sent to Moby via": "It is worth noting that Moby does not have native antonym support. This shortcode first queries WordNet, the results of which are then sent to Moby via",
    "[antonyms]cold[/antonyms]": "[antonyms]cold[/antonyms]",
    "[array name(str)]": "[array name(str)]",
    "Manages a group or list of values.": "Manages a group or list of values.",
    "The first positional argument,": "The first positional argument,",
    ", must be a string that corresponds to a variable name for the array. You can later use the same identifier with": ", must be a string that corresponds to a variable name for the array. You can later use the same identifier with",
    "to retrieve every value in the array as a delimited string.": "to retrieve every value in the array as a delimited string.",
    "If you want to": "If you want to",
    "retrieve": "retrieve",
    "values at specific indexes, supply the indexes as positional arguments as shown below:": "values at specific indexes, supply the indexes as positional arguments as shown below:",
    "[array my_array 2 4 3]": "[array my_array 2 4 3]",
    "values at specific indexes, supply the indexes as keyword arguments as shown below:": "values at specific indexes, supply the indexes as keyword arguments as shown below:",
    "[array my_array 2=\"something\" 4=500 3=\"something else\"]": "[array my_array 2=\"something\" 4=500 3=\"something else\"]",
    "Supports the optional": "Supports the optional",
    "_delimiter": "_delimiter",
    "argument that defines the separator string when retrieving multiple values from the array. Defaults to your": "argument that defines the separator string when retrieving multiple values from the array. Defaults to your",
    "Config.syntax.delimiter": "Config.syntax.delimiter",
    "setting.": "setting.",
    "Supports": "Supports",
    "which allows you to add values to the end of the array. You can pass multiple values into": "which allows you to add values to the end of the array. You can pass multiple values into",
    "with your": "with your",
    "string, e.g.": "string, e.g.",
    "[array my_array _append=\"something|another thing|third thing\"]": "[array my_array _append=\"something|another thing|third thing\"]",
    "Similarly, supports": "Similarly, supports",
    "which allows you to insert values to the beginning of the array.": "which allows you to insert values to the beginning of the array.",
    "_del": "_del",
    "which will remove a value from the array at the specified index, e.g.": "which will remove a value from the array at the specified index, e.g.",
    "BEFORE: my_array = 5,7,9,6": "BEFORE: my_array = 5,7,9,6",
    "[my_array _del=1]": "[my_array _del=1]",
    "AFTER: my_array = 5,9,6": "AFTER: my_array = 5,9,6",
    "_remove": "_remove",
    "which will remove the first matching value from the array, e.g.": "which will remove the first matching value from the array, e.g.",
    "[my_array _remove=9]": "[my_array _remove=9]",
    "AFTER: my_array = 5,7,6": "AFTER: my_array = 5,7,6",
    "_find": "_find",
    "which will return the index of the first matching value in the array.": "which will return the index of the first matching value in the array.",
    "_shuffle": "_shuffle",
    "which will randomize the order of the array.": "which will randomize the order of the array.",
    "Returns the content prefixed with the correct English indefinite article, in most cases": "Returns the content prefixed with the correct English indefinite article, in most cases",
    "a": "a",
    "an": "an",
    "definite": "definite",
    "positional argument which will instead return the definite article as a prefix, usually": "positional argument which will instead return the definite article as a prefix, usually",
    "the": "the",
    "[article]tiger[/article]": "[article]tiger[/article]",
    "RESULT: a tiger": "RESULT: a tiger",
    "[article]apple[/article]": "[article]apple[/article]",
    "RESULT: an apple": "RESULT: an apple",
    "Performs word-by-word spellcheck on the content, replacing any typos it finds with the most likely correction.": "Performs word-by-word spellcheck on the content, replacing any typos it finds with the most likely correction.",
    "Powered by the": "Powered by the",
    "library - see pattern docs for more info.": "library - see pattern docs for more info.",
    "confidence": "confidence",
    "argument, which is a float between 0 and 1 that determines how similar the suggested correction must be to the original content. Defaults to 0.85.": "argument, which is a float between 0 and 1 that determines how similar the suggested correction must be to the original content. Defaults to 0.85.",
    "[autocorrect]speling is vrey dfficult soemtims, okky!!![/autocorrect]": "[autocorrect]speling is vrey dfficult soemtims, okky!!![/autocorrect]",
    "RESULT: spelling is very difficult sometimes, okay!!!": "RESULT: spelling is very difficult sometimes, okay!!!",
    "[casing type]": "[casing type]",
    "Converts the casing of content to the selected type. Possible types:": "Converts the casing of content to the selected type. Possible types:",
    "For more information on these types, consult the": "For more information on these types, consult the",
    "casefy docs": "casefy docs",
    ", the library on which this shortcode depends.": ", the library on which this shortcode depends.",
    "[casing uppercase]why am i screaming[/casing]": "[casing uppercase]why am i screaming[/casing]",
    "Result: WHY AM I SCREAMING": "Result: WHY AM I SCREAMING",
    "[chance int {_sides}]": "[chance int {_sides}]",
    "Returns the content if the integer you passed is greater than or equal to a randomly generated number between 1 and 100.": "Returns the content if the integer you passed is greater than or equal to a randomly generated number between 1 and 100.",
    "You can change the upper boundary by specifying the optional": "You can change the upper boundary by specifying the optional",
    "argument.": "argument.",
    "[chance 25]I will show up in your prompt 25% of the time.[/chance]": "[chance 25]I will show up in your prompt 25% of the time.[/chance]",
    "Randomly returns one of multiple options, as delimited by the vertical pipe or newline character.": "Randomly returns one of multiple options, as delimited by the vertical pipe or newline character.",
    "which overrides the random nature of this shortcode with a pre-determined index (starting at 0.) Example:": "which overrides the random nature of this shortcode with a pre-determined index (starting at 0.) Example:",
    "[choose _case=1]red|yellow|green[/choose]": "[choose _case=1]red|yellow|green[/choose]",
    "will always return": "will always return",
    "yellow": "yellow",
    ". You can also pass a variable into this argument.": ". You can also pass a variable into this argument.",
    "Supports an optional positional argument that tells the shortcode how many times to execute (default 1). For example:": "Supports an optional positional argument that tells the shortcode how many times to execute (default 1). For example:",
    "[choose 2]Artist One|Artist Two|Artist Three|Artist Four[/choose]": "[choose 2]Artist One|Artist Two|Artist Three|Artist Four[/choose]",
    "will return two random artists.": "will return two random artists.",
    "argument which is a string delimeter that separates multiple options to be returned (defaults to": "argument which is a string delimeter that separates multiple options to be returned (defaults to",
    "). In the example above, you might get": "). In the example above, you might get",
    "Artist One, Artist Three": "Artist One, Artist Three",
    "as a result. When only returning one option,": "as a result. When only returning one option,",
    "is irrelevant.": "is irrelevant.",
    "argument, which allows you to customize the probability of each option. Weighted mode expects the content to alternate between": "argument, which allows you to customize the probability of each option. Weighted mode expects the content to alternate between",
    "weight value": "weight value",
    "the option itself": "the option itself",
    "using the normal delimiter. For example, if you want your list to return Apple 30% of the time, Strawberry 50% of the time, and Blueberry 20% of the time you can do it like this:": "using the normal delimiter. For example, if you want your list to return Apple 30% of the time, Strawberry 50% of the time, and Blueberry 20% of the time you can do it like this:",
    "[choose _weighted]\n3|Apple\n5|Strawberry\n2|Blueberry\n[/choose]": "[choose _weighted]\n3|Apple\n5|Strawberry\n2|Blueberry\n[/choose]",
    "If you skip a weight value--e.g.": "If you skip a weight value--e.g.",
    "3|Apple|Strawberry": "3|Apple|Strawberry",
    "--then the following option (Strawberry) will automatically have a weight value of 1.": "--then the following option (Strawberry) will automatically have a weight value of 1.",
    "The weight value dictates the number of times that an option is added to the master list of choices, which is then shuffled and picked from at random. So, if your content is": "The weight value dictates the number of times that an option is added to the master list of choices, which is then shuffled and picked from at random. So, if your content is",
    "2|Blue|3|Red|Green": "2|Blue|3|Red|Green",
    "the master list becomes": "the master list becomes",
    "Blue,Blue,Red,Red,Red,Green": "Blue,Blue,Red,Red,Red,Green",
    "[choose]red|yellow|blue|green[/choose]": "[choose]red|yellow|blue|green[/choose]",
    "Updates your Unprompted settings with the content for the duration of a run. Generally you would put this at the top of a template.": "Updates your Unprompted settings with the content for the duration of a run. Generally you would put this at the top of a template.",
    "Supports inline JSON as well as external JSON files.": "Supports inline JSON as well as external JSON files.",
    "Supports relative and absolute filepaths.": "Supports relative and absolute filepaths.",
    "Do not enter a file extension,": "Do not enter a file extension,",
    ".json": ".json",
    "is assumed.": "is assumed.",
    "[config]{\"debug\":True,\"shortcodes\":{\"choose_delimiter\":\"*\"}}[/config]": "[config]{\"debug\":True,\"shortcodes\":{\"choose_delimiter\":\"*\"}}[/config]",
    "[config]./my_custom_settings[/config]": "[config]./my_custom_settings[/config]",
    "Converts the verbs in the content to variety of conjugated forms.": "Converts the verbs in the content to variety of conjugated forms.",
    "tense": "tense",
    "argument. Defaults to": "argument. Defaults to",
    "present": "present",
    ". Other options include:": ". Other options include:",
    "infinitive": "infinitive",
    "past": "past",
    "future": "future",
    "person": "person",
    "argument for perspective. Defaults to": "argument for perspective. Defaults to",
    "none": "none",
    "singular": "singular",
    ". Also supports": ". Also supports",
    "plural": "plural",
    "mood": "mood",
    "indicative": "indicative",
    "imperative": "imperative",
    "conditional": "conditional",
    "subjunctive": "subjunctive",
    "aspect": "aspect",
    "imperfective": "imperfective",
    "perfective": "perfective",
    "progressive": "progressive",
    "negated": "negated",
    "boolean argument. Defaults to 0.": "boolean argument. Defaults to 0.",
    "parse": "parse",
    "boolean argument. Defaults to 1.": "boolean argument. Defaults to 1.",
    "alias": "alias",
    "argument, which is a shorthand \"preset\" for the above settings. Overrides your other arguments. The following aliases are supported:": "argument, which is a shorthand \"preset\" for the above settings. Overrides your other arguments. The following aliases are supported:",
    "inf": "inf",
    "1sg": "1sg",
    "2sg": "2sg",
    "3sg": "3sg",
    "pl": "pl",
    "part": "part",
    "p": "p",
    "1sgp": "1sgp",
    "2sgp": "2sgp",
    "3gp": "3gp",
    "ppl": "ppl",
    "ppart": "ppart",
    "[conjugate tense=\"past\"]She says[/conjugate]": "[conjugate tense=\"past\"]She says[/conjugate]",
    "RESULT: She said": "RESULT: She said",
    "[do until(str)]": "[do until(str)]",
    "Do-until style loop. The content is processed, then the": "Do-until style loop. The content is processed, then the",
    "until": "until",
    "expression is evaluated - if it's true, the content is processed again. Repeat until": "expression is evaluated - if it's true, the content is processed again. Repeat until",
    "is false.": "is false.",
    "[sets my_var=0]\n[do until=\"my_var > 5\"]\n        Print me\n        [sets my_var=\"my_var + 1\"]\n[/do]": "[sets my_var=0]\n[do until=\"my_var > 5\"]\n        Print me\n        [sets my_var=\"my_var + 1\"]\n[/do]",
    "Shorthand \"else if.\" Equivalent to": "Shorthand \"else if.\" Equivalent to",
    "[else]{if my_var=\"something\"}content{/if}[/else]": "[else]{if my_var=\"something\"}content{/if}[/else]",
    "[set my_var]5[/set]\n[if my_var=6]Discard this content[/if]\n[elif my_var=5]Return this content![/elif]": "[set my_var]5[/set]\n[if my_var=6]Discard this content[/if]\n[elif my_var=5]Return this content![/elif]",
    "[else]": "[else]",
    "Returns content if a previous conditional shortcode (e.g.": "Returns content if a previous conditional shortcode (e.g.",
    ") failed its check, otherwise discards content.": ") failed its check, otherwise discards content.",
    "Note:": "Note:",
    "In its current implementation,": "In its current implementation,",
    "should appear immediately after the conditional shortcode - don't try to get too crazy with nesting or delayed statements or it will probably fail.": "should appear immediately after the conditional shortcode - don't try to get too crazy with nesting or delayed statements or it will probably fail.",
    "[if my_var=0]Print something[/if][else]It turns out my_var did not equal 0.[/else]": "[if my_var=0]Print something[/if][else]It turns out my_var did not equal 0.[/else]",
    "Parses the content using the simpleeval library, returning the result. Particularly useful for arithmetic.": "Parses the content using the simpleeval library, returning the result. Particularly useful for arithmetic.",
    "simpleeval is designed to prevent the security risks of Python's stock": "simpleeval is designed to prevent the security risks of Python's stock",
    "function, however I make no assurances in this regard. If you wish to use Unprompted in a networked environment, do so at your own risk.": "function, however I make no assurances in this regard. If you wish to use Unprompted in a networked environment, do so at your own risk.",
    "[eval]5 + 5[/eval]": "[eval]5 + 5[/eval]",
    "[file path(str)]": "[file path(str)]",
    "Processes the content of": "Processes the content of",
    "path": "path",
    "(including any shortcodes therein) and returns the result.": "(including any shortcodes therein) and returns the result.",
    "unprompted/templates": "unprompted/templates",
    "is the base directory for this shortcode, e.g.": "is the base directory for this shortcode, e.g.",
    "[file example/main]": "[file example/main]",
    "will target": "will target",
    "unprompted/templates/example/main.txt": "unprompted/templates/example/main.txt",
    ".txt": ".txt",
    "Supports relative paths by starting the": "Supports relative paths by starting the",
    "with": "with",
    "./": "./",
    ", e.g.": ", e.g.",
    "[file ./main]": "[file ./main]",
    "will target the folder that the previously-called": "will target the folder that the previously-called",
    "resides in.": "resides in.",
    "This shortcode is powered by Python's glob module, which means it supports wildcards and other powerful syntax expressions. For example, if you wanted to process a random file inside of the": "This shortcode is powered by Python's glob module, which means it supports wildcards and other powerful syntax expressions. For example, if you wanted to process a random file inside of the",
    "common": "common",
    "directory, you would do so like this:": "directory, you would do so like this:",
    "[file common/*]": "[file common/*]",
    "Supports optional keyword arguments that are passed to": "Supports optional keyword arguments that are passed to",
    "for your convenience. This effectively allows you to use": "for your convenience. This effectively allows you to use",
    "like a function in programming, e.g.": "like a function in programming, e.g.",
    "[file convert_to_roman_numeral number=7]": "[file convert_to_roman_numeral number=7]",
    "The file is expected to be": "The file is expected to be",
    "utf-8": "utf-8",
    "encoding. You can change this with the optional": "encoding. You can change this with the optional",
    "[file my_template/common/adjective]": "[file my_template/common/adjective]",
    "[filelist path(str)]": "[filelist path(str)]",
    "Returns a delimited string containing the full paths of all files in a given path.": "Returns a delimited string containing the full paths of all files in a given path.",
    "This shortcode is powered by Python's glob module, which means it supports wildcards and other powerful syntax expressions.": "This shortcode is powered by Python's glob module, which means it supports wildcards and other powerful syntax expressions.",
    "argument which lets you specify the separator between each filepath. It defaults to your config's": "argument which lets you specify the separator between each filepath. It defaults to your config's",
    "value (": "value (",
    ").": ").",
    "[filelist \"C:/my_pictures/*.*\"]": "[filelist \"C:/my_pictures/*.*\"]",
    "[for var \"test var\" \"update var\"]": "[for var \"test var\" \"update var\"]",
    "Returns the content an arbitrary number of times until the": "Returns the content an arbitrary number of times until the",
    "test": "test",
    "condition returns false.": "condition returns false.",
    "Importantly, the": "Importantly, the",
    "update": "update",
    "arguments must be enclosed in quotes because they are parsed as advanced expressions.": "arguments must be enclosed in quotes because they are parsed as advanced expressions.",
    "var": "var",
    "is initialized as a user variable and can be accessed as normal, e.g.": "is initialized as a user variable and can be accessed as normal, e.g.",
    "[get var]": "[get var]",
    "is valid.": "is valid.",
    "The result of the": "The result of the",
    "argument is set as the value of": "argument is set as the value of",
    "at the end of each loop step.": "at the end of each loop step.",
    "[for i=0 \"i<10\" \"i+1\"]\nCurrent value of i: {get i}\n[/for]": "[for i=0 \"i<10\" \"i+1\"]\nCurrent value of i: {get i}\n[/for]",
    "[get variable]": "[get variable]",
    "Returns the value of": "Returns the value of",
    "variable": "variable",
    "Supports secondary shortcode tags with the optional": "Supports secondary shortcode tags with the optional",
    "argument, e.g.": "argument, e.g.",
    "[get _var=\"<file example>\"]": "[get _var=\"<file example>\"]",
    "You can add": "You can add",
    "content to your variable. This is particularly useful for enclosing the variable in escaped brackets, e.g.": "content to your variable. This is particularly useful for enclosing the variable in escaped brackets, e.g.",
    "[get my_var _before=[ _after=]]": "[get my_var _before=[ _after=]]",
    "will print": "will print",
    "[value of my_var]": "[value of my_var]",
    "argument, the value of which is returned if your variable does not exist e.g.": "argument, the value of which is returned if your variable does not exist e.g.",
    "[get car_color _default=\"red\"]": "[get car_color _default=\"red\"]",
    "Supports returning multiple variables, e.g.": "Supports returning multiple variables, e.g.",
    "[get var_a var_b]": "[get var_a var_b]",
    "will return the values of two variables separated by a comma and space.": "will return the values of two variables separated by a comma and space.",
    "You can change the default separator with": "You can change the default separator with",
    "My name is [get name]": "My name is [get name]",
    "[if variable {_not} {_any} {_is}]": "[if variable {_not} {_any} {_is}]",
    "Checks whether": "Checks whether",
    "is equal to the given value, returning the content if true, otherwise discarding the content.": "is equal to the given value, returning the content if true, otherwise discarding the content.",
    "Supports the testing of multiple variables, e.g.": "Supports the testing of multiple variables, e.g.",
    "[if var_a=1 var_b=50 var_c=\"something\"]": "[if var_a=1 var_b=50 var_c=\"something\"]",
    ". If one or more variables return false, the content is discarded.": ". If one or more variables return false, the content is discarded.",
    "argument allows you to return the content if one of many variables return true. This is the equivalent of running \"or\" instead of \"and\" in programming, e.g.": "argument allows you to return the content if one of many variables return true. This is the equivalent of running \"or\" instead of \"and\" in programming, e.g.",
    "[if _any var_a=1 var_b=50]": "[if _any var_a=1 var_b=50]",
    "_not": "_not",
    "argument allows you to test for false instead of true, e.g.": "argument allows you to test for false instead of true, e.g.",
    "[if _not my_variable=1]": "[if _not my_variable=1]",
    "will return the content if": "will return the content if",
    "my_variable": "my_variable",
    "does": "does",
    "equal 1.": "equal 1.",
    "argument allows you to specify the comparison logic for your arguments. Defaults to": "argument allows you to specify the comparison logic for your arguments. Defaults to",
    ", which simply checks for equality. Other options include": ", which simply checks for equality. Other options include",
    ". Example:": ". Example:",
    "[if my_var=\"5\" _is=\"<=\"]": "[if my_var=\"5\" _is=\"<=\"]",
    "advanced expressions": "advanced expressions",
    "- useful for testing complex conditions.": "- useful for testing complex conditions.",
    "[if subject=\"man\"]wearing a business suit[/if]": "[if subject=\"man\"]wearing a business suit[/if]",
    "(Advanced expression demo)\n[if \"subject is 'man' or subject is 'woman'\"]wearing a shirt[/if]": "(Advanced expression demo)\n[if \"subject is 'man' or subject is 'woman'\"]wearing a shirt[/if]",
    "Replaces the content with one or more random hypernyms. This shortcode is powered by WordNet.": "Replaces the content with one or more random hypernyms. This shortcode is powered by WordNet.",
    "argument allows you to specify the maximum number of hypernyms to return. Defaults to -1, which returns all hypernyms. The hypernyms list is delimited by": "argument allows you to specify the maximum number of hypernyms to return. Defaults to -1, which returns all hypernyms. The hypernyms list is delimited by",
    "[hypernyms max=1]dog[/hypernyms]": "[hypernyms max=1]dog[/hypernyms]",
    "Possible result: animal": "Possible result: animal",
    "Replaces the content with one or more random hyponyms. This shortcode is powered by WordNet.": "Replaces the content with one or more random hyponyms. This shortcode is powered by WordNet.",
    "argument allows you to specify the maximum number of hyponyms to return. Defaults to -1, which returns all hyponyms. The hyponyms list is delimited by": "argument allows you to specify the maximum number of hyponyms to return. Defaults to -1, which returns all hyponyms. The hyponyms list is delimited by",
    "[hyponyms]animal[/hyponyms]": "[hyponyms]animal[/hyponyms]",
    "Possible results: dog, cat, bird, ...": "Possible results: dog, cat, bird, ...",
    "Prints metadata about the content. You must pass the type(s) of data as positional arguments.": "Prints metadata about the content. You must pass the type(s) of data as positional arguments.",
    "for retrieving the number of individual characters in the content.": "for retrieving the number of individual characters in the content.",
    "for retrieving the number of words in the content, using space as a delimiter.": "for retrieving the number of words in the content, using space as a delimiter.",
    "for retrieving the number of a custom substring in the content. For example,": "for retrieving the number of a custom substring in the content. For example,",
    "[info string_count=\"the\"]the frog and the dog and the log[/info]": "[info string_count=\"the\"]the frog and the dog and the log[/info]",
    "will return 3.": "will return 3.",
    "for retrieving the number of CLIP tokens in the content (i.e. a metric for prompt complexity.) This argument is only supported within the A1111 WebUI environment.": "for retrieving the number of CLIP tokens in the content (i.e. a metric for prompt complexity.) This argument is only supported within the A1111 WebUI environment.",
    "[info word_count]A photo of Emma Watson.[/info]": "[info word_count]A photo of Emma Watson.[/info]",
    "Result: 5": "Result: 5",
    "Returns the number of items in a delimited string.": "Returns the number of items in a delimited string.",
    "argument which lets you specify the separator between each item. It defaults to your config's": "argument which lets you specify the separator between each item. It defaults to your config's",
    "_max": "_max",
    "argument which caps the value returned by this shortcode. Defaults to -1, which is \"no cap.\"": "argument which caps the value returned by this shortcode. Defaults to -1, which is \"no cap.\"",
    "[length \"item one|item two|item three\"]": "[length \"item one|item two|item three\"]",
    "Result: 3": "Result: 3",
    "Returns the greatest value among the arguments. Supports advanced expressions.": "Returns the greatest value among the arguments. Supports advanced expressions.",
    "[sets var_a=2 var_b=500]\n[max var_b var_a \"100+2\" \"37\"]": "[sets var_a=2 var_b=500]\n[max var_b var_a \"100+2\" \"37\"]",
    "Result: 500": "Result: 500",
    "Returns the smallest value among the arguments. Supports advanced expressions.": "Returns the smallest value among the arguments. Supports advanced expressions.",
    "[sets var_a=2 var_b=500]\n[min var_b var_a \"100+2\" \"37\"]": "[sets var_a=2 var_b=500]\n[min var_b var_a \"100+2\" \"37\"]",
    "Result: 2": "Result: 2",
    "[override variable]": "[override variable]",
    "Forces": "Forces",
    "to equal the given value when attempting to": "to equal the given value when attempting to",
    "it.": "it.",
    "Supports multiple variables.": "Supports multiple variables.",
    "In the example below,": "In the example below,",
    "will equal \"panda\" after running the": "will equal \"panda\" after running the",
    "shortcode.": "shortcode.",
    "[override my_variable=\"panda\"][set my_variable]fox[/set]": "[override my_variable=\"panda\"][set my_variable]fox[/set]",
    "Returns the content in its plural form. Powered by the": "Returns the content in its plural form. Powered by the",
    "pos": "pos",
    "argument. This is the target position of speech and defaults to \"noun.\" In some rare cases, you may want to switch this to \"adjective.\"": "argument. This is the target position of speech and defaults to \"noun.\" In some rare cases, you may want to switch this to \"adjective.\"",
    "[pluralize]child[/pluralize]": "[pluralize]child[/pluralize]",
    "RESULT: children": "RESULT: children",
    "[random {_min} {_max} {_float}]": "[random {_min} {_max} {_float}]",
    "Returns a random integer between 0 and the given integer, e.g.": "Returns a random integer between 0 and the given integer, e.g.",
    "[random 2]": "[random 2]",
    "will return 0, 1, or 2.": "will return 0, 1, or 2.",
    "You can specify the lower and upper boundaries of the range with": "You can specify the lower and upper boundaries of the range with",
    "_min": "_min",
    "[random _min=5 _max=10]": "[random _min=5 _max=10]",
    "If you pass": "If you pass",
    "_float": "_float",
    "into this shortcode, it will support decimal numbers instead of integers.": "into this shortcode, it will support decimal numbers instead of integers.",
    "[set restore_faces][random 1][/set]": "[set restore_faces][random 1][/set]",
    "[repeat times(int) {_sep}]": "[repeat times(int) {_sep}]",
    "Processes and returns the content a number of": "Processes and returns the content a number of",
    "times": "times",
    "argument which is a string delimiter inserted after each output, excluding the final output. Example:": "argument which is a string delimiter inserted after each output, excluding the final output. Example:",
    "[repeat 3 _sep=\"|\"]content[/repeat]": "[repeat 3 _sep=\"|\"]content[/repeat]",
    "will return": "will return",
    "content|content|content": "content|content|content",
    "Supports float values as well. For example,": "Supports float values as well. For example,",
    "[repeat 4.2]content[/repeat]": "[repeat 4.2]content[/repeat]",
    "will have a 20% chance to return": "will have a 20% chance to return",
    "5 times instead of 4.": "5 times instead of 4.",
    "[set my_var]0[/set]\n[repeat 5]\nVariable is currently: {set my_var _out _append}1</set>\n[/repeat]": "[set my_var]0[/set]\n[repeat 5]\nVariable is currently: {set my_var _out _append}1</set>\n[/repeat]",
    "Updates the content using argument pairings as replacement logic.": "Updates the content using argument pairings as replacement logic.",
    "Arguments are case-sensitive.": "Arguments are case-sensitive.",
    "arguments, which can process secondary shortcode tags as replacement targets, e.g.": "arguments, which can process secondary shortcode tags as replacement targets, e.g.",
    "[replace _from=\"{get var_a}\" _to=\"{get var_b}\"]": "[replace _from=\"{get var_a}\" _to=\"{get var_b}\"]",
    "argument which limits the number of occurances to replace. For example,": "argument which limits the number of occurances to replace. For example,",
    "[replace the=\"a\" _count=1]the frog and the dog and the log[/replace]": "[replace the=\"a\" _count=1]the frog and the dog and the log[/replace]",
    "a frog and the dog and the log": "a frog and the dog and the log",
    "[replace red=\"purple\" flowers=\"marbles\"]\nA photo of red flowers.\n[/replace]": "[replace red=\"purple\" flowers=\"marbles\"]\nA photo of red flowers.\n[/replace]",
    "Result: A photo of purple marbles.": "Result: A photo of purple marbles.",
    "[set {_append} {_prepend}]": "[set {_append} {_prepend}]",
    "Sets a variable to the given content.": "Sets a variable to the given content.",
    "will instead add the content to the end of the variable's current value, e.g. if": "will instead add the content to the end of the variable's current value, e.g. if",
    "equals \"hello\" then": "equals \"hello\" then",
    "[set my_var _append] world.[/set]": "[set my_var _append] world.[/set]",
    "will make it equal \"hello world.\"": "will make it equal \"hello world.\"",
    "will instead add the content to the beginning of the variable's current value.": "will instead add the content to the beginning of the variable's current value.",
    "argument which will bypass the shortcode if the variable already exists.": "argument which will bypass the shortcode if the variable already exists.",
    "argument, which is a delimited string of accepted values. The behavior of this argument depends on whether or not the": "argument, which is a delimited string of accepted values. The behavior of this argument depends on whether or not the",
    "argument is present:": "argument is present:",
    "If": "If",
    "and the variable exists with a value that is not accepted by": "and the variable exists with a value that is not accepted by",
    ", then": ", then",
    "is bypassed.": "is bypassed.",
    "If not": "If not",
    "and we're trying to set a value that is not accepted by": "and we're trying to set a value that is not accepted by",
    ", then the": ", then the",
    "block is bypassed.": "block is bypassed.",
    "In the Wizard UI for certain kinds of elements,": "In the Wizard UI for certain kinds of elements,",
    "is used to populate the element, such as a dropdown menu or radio group.": "is used to populate the element, such as a dropdown menu or radio group.",
    "Supports all Stable Diffusion variables that are exposed via Automatic's Script system, e.g.": "Supports all Stable Diffusion variables that are exposed via Automatic's Script system, e.g.",
    "[set cfg_scale]5[/set]": "[set cfg_scale]5[/set]",
    "will force the CFG Scale to be 5 for the run.": "will force the CFG Scale to be 5 for the run.",
    "[set my_var]This is the value of my_var[/set]": "[set my_var]This is the value of my_var[/set]",
    "The atomic version of": "The atomic version of",
    "that allows you to set multiple variables at once.": "that allows you to set multiple variables at once.",
    "This shortcode processes your arguments with": "This shortcode processes your arguments with",
    "directly, meaning you can take advantage of system arguments supported by": "directly, meaning you can take advantage of system arguments supported by",
    ", such as": ", such as",
    "[sets var_a=10 var_b=something var_c=500]": "[sets var_a=10 var_b=something var_c=500]",
    "Returns the content in its singular form. Powered by the": "Returns the content in its singular form. Powered by the",
    "[singularize]children[/singularize]": "[singularize]children[/singularize]",
    "RESULT: child": "RESULT: child",
    "[substring {start} {end} {step} {unit}]": "[substring {start} {end} {step} {unit}]",
    "Returns a slice of the content as determined by the keyword arguments.": "Returns a slice of the content as determined by the keyword arguments.",
    "start": "start",
    "is the beginning of the slice, zero indexed. Defaults to 0.": "is the beginning of the slice, zero indexed. Defaults to 0.",
    "end": "end",
    "is the last position of the slice. Defaults to 0.": "is the last position of the slice. Defaults to 0.",
    "is the skip interval. Defaults to 1 (in other words, a continuous substring.)": "is the skip interval. Defaults to 1 (in other words, a continuous substring.)",
    "unit": "unit",
    "is either": "is either",
    "and refers to the unit of the aforementioned arguments. Defaults to": "and refers to the unit of the aforementioned arguments. Defaults to",
    "[substring start=1 end=3 unit=words]A photo of a giant dog.[/substring]": "[substring start=1 end=3 unit=words]A photo of a giant dog.[/substring]",
    "Result: photo of a": "Result: photo of a",
    "[switch var(str)]": "[switch var(str)]",
    "Allows you to run different logic blocks with inner case statements that match the value of the given positional argument.": "Allows you to run different logic blocks with inner case statements that match the value of the given positional argument.",
    "Both": "Both",
    "support advanced expressions.": "support advanced expressions.",
    "[set my_var]100[/set]\n[switch my_var]\n        {case 1}Does not match{/case}\n        {case 2}Does not match{/case}\n        {case 100}Matches! This content will be returned{/case}\n        {case 4}Does not match{/case}\n        {case}If no other case matches, this content will be returned by default{/case}\n[/switch]": "[set my_var]100[/set]\n[switch my_var]\n        {case 1}Does not match{/case}\n        {case 2}Does not match{/case}\n        {case 100}Matches! This content will be returned{/case}\n        {case 4}Does not match{/case}\n        {case}If no other case matches, this content will be returned by default{/case}\n[/switch]",
    "Replaces the content with one or more random synonyms. This shortcode is powered by a combination of WordNet and Moby Thesaurus II. Does not require an online connection after first use (word databases are downloaded to disk.)": "Replaces the content with one or more random synonyms. This shortcode is powered by a combination of WordNet and Moby Thesaurus II. Does not require an online connection after first use (word databases are downloaded to disk.)",
    "argument allows you to specify the maximum number of synonyms to return. Defaults to -1, which returns all synonyms. The synonym list is delimited by": "argument allows you to specify the maximum number of synonyms to return. Defaults to -1, which returns all synonyms. The synonym list is delimited by",
    "[synonyms]amazing[/synonyms]": "[synonyms]amazing[/synonyms]",
    "[while variable {_not} {_any} {_is}]": "[while variable {_not} {_any} {_is}]",
    "is equal to the given value, returning the content repeatedly until the condition is false. This can create an infinite loop if you're not careful.": "is equal to the given value, returning the content repeatedly until the condition is false. This can create an infinite loop if you're not careful.",
    "This shortcode also supports advanced expression syntax, e.g.": "This shortcode also supports advanced expression syntax, e.g.",
    "[while \"some_var >= 5 and another_var < 2\"]": "[while \"some_var >= 5 and another_var < 2\"]",
    ". The following arguments are only relevant if you": ". The following arguments are only relevant if you",
    "don't": "don't",
    "want to use advanced expressions:": "want to use advanced expressions:",
    "[while var_a=1 var_b=50 var_c=\"something\"]": "[while var_a=1 var_b=50 var_c=\"something\"]",
    ". If one or more variables return false, the loop ends.": ". If one or more variables return false, the loop ends.",
    "argument will continue the loop if any of the provided conditions returns true.": "argument will continue the loop if any of the provided conditions returns true.",
    "[while _not my_variable=1]": "[while _not my_variable=1]",
    "will continue the loop so long as": "will continue the loop so long as",
    "[while my_var=\"5\" _is=\"<=\"]": "[while my_var=\"5\" _is=\"<=\"]",
    "Advanced expression demo:\n[set my_var]3[/set]\n[while \"my_var < 10\"]\n        Output\n        {sets my_var=\"my_var + 1\"}\n[/while]": "Advanced expression demo:\n[set my_var]3[/set]\n[while \"my_var < 10\"]\n        Output\n        {sets my_var=\"my_var + 1\"}\n[/while]",
    "[set my_var]3[/set]\n[while my_var=\"10\" _is=\"<\"]\n        Output\n        {sets my_var=\"my_var + 1\"}\n[/while]": "[set my_var]3[/set]\n[while my_var=\"10\" _is=\"<\"]\n        Output\n        {sets my_var=\"my_var + 1\"}\n[/while]",
    "[unset variable]": "[unset variable]",
    "Removes one or more variables from memory.": "Removes one or more variables from memory.",
    "Note that variables are automatically deleted at the end of each run - you do": "Note that variables are automatically deleted at the end of each run - you do",
    "need to manually clean memory in most cases. The": "need to manually clean memory in most cases. The",
    "shortcode is for advanced use.": "shortcode is for advanced use.",
    "[set var_a=10 var_b=\"something\"]\n[unset var_a var_b]": "[set var_a=10 var_b=\"something\"]\n[unset var_a var_b]",
    "Stable Diffusion Shortcodes": "Stable Diffusion Shortcodes",
    "This section describes all of the included shortcodes which are specifically designed for use with the A1111 WebUI.": "This section describes all of the included shortcodes which are specifically designed for use with the A1111 WebUI.",
    "Enables support for": "Enables support for",
    "ControlNet": "ControlNet",
    "models in img2img mode. ControlNet is a neural network structure to control diffusion models by adding extra conditions.": "models in img2img mode. ControlNet is a neural network structure to control diffusion models by adding extra conditions.",
    "NOTE:": "NOTE:",
    "This is a \"wrapper\" implementation of the original ControlNet code. For a more robust solution, you can check out": "This is a \"wrapper\" implementation of the original ControlNet code. For a more robust solution, you can check out",
    "the dedicated ControlNet extension by Mikubill": "the dedicated ControlNet extension by Mikubill",
    "You need a bare minimum of 8 GB of VRAM to use this shortcode, although 12 GB is recommended.": "You need a bare minimum of 8 GB of VRAM to use this shortcode, although 12 GB is recommended.",
    "Supports the": "Supports the",
    "argument, which is the name of a ControlNet checkpoint in your": "argument, which is the name of a ControlNet checkpoint in your",
    "models/Stable-diffusion": "models/Stable-diffusion",
    "directory (do not include the file extension.) You can download ControlNet checkpoints from": "directory (do not include the file extension.) You can download ControlNet checkpoints from",
    "the official HuggingFace page": "the official HuggingFace page",
    "For each model, you also need a copy of the": "For each model, you also need a copy of the",
    "cldm_v15.yaml": "cldm_v15.yaml",
    "config file. Rename it to match the name of the ControlNet model, e.g.": "config file. Rename it to match the name of the ControlNet model, e.g.",
    "control_sd15_normal.yaml": "control_sd15_normal.yaml",
    "For each model, you also need the associated": "For each model, you also need the associated",
    "annotator files available here": "annotator files available here",
    ". Place these into your": ". Place these into your",
    "extensions/unprompted/lib_unprompted/stable_diffusion/controlnet/annotator/ckpts": "extensions/unprompted/lib_unprompted/stable_diffusion/controlnet/annotator/ckpts",
    "If you run into any errors, please triple-check your filepaths before opening a bug report.": "If you run into any errors, please triple-check your filepaths before opening a bug report.",
    "You can use ControlNet with custom SD 1.5 models": "You can use ControlNet with custom SD 1.5 models",
    "by merging checkpoints as described here": "by merging checkpoints as described here",
    "Please be aware that the last part of your model's filename indicates which type of ControlNet model it is. The following ControlNet model types are supported:": "Please be aware that the last part of your model's filename indicates which type of ControlNet model it is. The following ControlNet model types are supported:",
    "openpose": "openpose",
    "scribble": "scribble",
    "mlsd": "mlsd",
    "depth": "depth",
    "normal": "normal",
    "hed": "hed",
    "canny": "canny",
    "seg": "seg",
    "ControlNet models should": "ControlNet models should",
    "be loaded manually from your WebUI dropdown.": "be loaded manually from your WebUI dropdown.",
    "save_memory": "save_memory",
    "argument to minimize VRAM requirements.": "argument to minimize VRAM requirements.",
    "detect_resolution": "detect_resolution",
    "argument which is the size of the detected map. Defaults to 512. Some models may perform better at 384. Lowering this value to 256 may help with VRAM requirements.": "argument which is the size of the detected map. Defaults to 512. Some models may perform better at 384. Lowering this value to 256 may help with VRAM requirements.",
    "eta": "eta",
    "Supports the following model-specific arguments:": "Supports the following model-specific arguments:",
    "value_threshold": "value_threshold",
    "distance_threshold": "distance_threshold",
    "bg_threshold": "bg_threshold",
    "low_threshold": "low_threshold",
    "high_threshold": "high_threshold",
    "Allows you to modify or replace your img2img mask with arbitrary files.": "Allows you to modify or replace your img2img mask with arbitrary files.",
    "mode": "mode",
    "argument which determines how the file mask will behave alongside the existing mask:": "argument which determines how the file mask will behave alongside the existing mask:",
    "will overlay the two masks. This is the default value.": "will overlay the two masks. This is the default value.",
    "will scrap the existing mask entirely.": "will scrap the existing mask entirely.",
    "will remove the file mask region from the existing mask region.": "will remove the file mask region from the existing mask region.",
    "_show": "_show",
    "positional argument which will append the final mask to your generation output window.": "positional argument which will append the final mask to your generation output window.",
    "Walter White[file2mask \"C:/pictures/my_mask.png\"]": "Walter White[file2mask \"C:/pictures/my_mask.png\"]",
    "Used within the": "Used within the",
    "block to append an img2img task to your generation.": "block to append an img2img task to your generation.",
    "The image resulting from your main prompt (e.g. the txt2img result) will be used as the initial image for": "The image resulting from your main prompt (e.g. the txt2img result) will be used as the initial image for",
    "While this shortcode does not take any arguments, most img2img settings can be set in advance.": "While this shortcode does not take any arguments, most img2img settings can be set in advance.",
    "Does not currently support batch_size or batch_count": "Does not currently support batch_size or batch_count",
    "- coming soon!": "- coming soon!",
    "Automatically adjusts the width and height parameters in img2img mode based on the proportions of the input image.": "Automatically adjusts the width and height parameters in img2img mode based on the proportions of the input image.",
    "Stable Diffuion generates images in sizes divisible by 64 pixels. If your initial image is something like 504x780, this shortcode will set the width and height to 512x768.": "Stable Diffuion generates images in sizes divisible by 64 pixels. If your initial image is something like 504x780, this shortcode will set the width and height to 512x768.",
    "target_size": "target_size",
    "which is the minimum possible size of either dimension. Defaults to 512.": "which is the minimum possible size of either dimension. Defaults to 512.",
    "only_full_res": "only_full_res",
    "which, if true, will bypass this shortcode unless the \"full resolution inpainting\" setting is enabled. Defaults to false.": "which, if true, will bypass this shortcode unless the \"full resolution inpainting\" setting is enabled. Defaults to false.",
    "[img2img_autosize] Photo of a cat": "[img2img_autosize] Photo of a cat",
    "Performs an advanced CLIP interrogation technique on the initial image known as": "Performs an advanced CLIP interrogation technique on the initial image known as",
    "Hard Prompts Made Easy": "Hard Prompts Made Easy",
    "Be aware that this technique is essentially a training routine and will significantly lengthen your inference time, at least on the default settings. On a Geforce 3090, it appears to take around 1-2 minutes.": "Be aware that this technique is essentially a training routine and will significantly lengthen your inference time, at least on the default settings. On a Geforce 3090, it appears to take around 1-2 minutes.",
    "By default, this shortcode is only compatible with SD 1.5 models. If you wish to use it with SD 2.1 or Midjourney, please set": "By default, this shortcode is only compatible with SD 1.5 models. If you wish to use it with SD 2.1 or Midjourney, please set",
    "clip_model": "clip_model",
    "clip_pretrain": "clip_pretrain",
    ". It does work surprisingly well with Midjourney.": ". It does work surprisingly well with Midjourney.",
    "argument. This is a path to file(s) or a directory to use as the initial image. If not provided, it will default to the initial image in your img2img tab. Note: you can supply multiple paths delimited by": "argument. This is a path to file(s) or a directory to use as the initial image. If not provided, it will default to the initial image in your img2img tab. Note: you can supply multiple paths delimited by",
    ", and img2pez will optimize a single prompt across all provided images.": ", and img2pez will optimize a single prompt across all provided images.",
    "argument, which is the length of the resulting prompt in tokens. Default to 8.": "argument, which is the length of the resulting prompt in tokens. Default to 8.",
    "argument, which is the total number of training steps to perform. Defaults to 3000.": "argument, which is the total number of training steps to perform. Defaults to 3000.",
    "learning_rate": "learning_rate",
    "argument. Defaults to 0.1.": "argument. Defaults to 0.1.",
    "weight_decay": "weight_decay",
    "Supports the amusingly-named": "Supports the amusingly-named",
    "prompt_bs": "prompt_bs",
    "argument, which is described by the technique's authors as \"number of intializations.\" Defaults to 1.": "argument, which is described by the technique's authors as \"number of intializations.\" Defaults to 1.",
    "argument. Defaults to ViT-L-14.": "argument. Defaults to ViT-L-14.",
    "pretrain_clip": "pretrain_clip",
    "argument. Defaults to openai.": "argument. Defaults to openai.",
    "argument which attempts to free the CLIP model from memory as soon as the img2pez operation is finished. This isn't recommended unless you are running into OOM issues.": "argument which attempts to free the CLIP model from memory as soon as the img2pez operation is finished. This isn't recommended unless you are running into OOM issues.",
    "[init_image path(str)]": "[init_image path(str)]",
    "Loads an image from the given": "Loads an image from the given",
    "and sets it as the initial image for use with img2img.": "and sets it as the initial image for use with img2img.",
    "Note that": "Note that",
    "must be an absolute path, including the file extension.": "must be an absolute path, including the file extension.",
    "If the given": "If the given",
    "ends with the": "ends with the",
    "wildcard,": "wildcard,",
    "will choose a random file in that directory.": "will choose a random file in that directory.",
    "Important:": "Important:",
    "At the moment, you still have to select an image in the WebUI before pressing Generate, or this shortcode will throw an error. You can select any image - it doesn't matter what it is, just as long as the field isn't empty.": "At the moment, you still have to select an image in the WebUI before pressing Generate, or this shortcode will throw an error. You can select any image - it doesn't matter what it is, just as long as the field isn't empty.",
    "[init_image \"C:/pictures/my_image.png\"]": "[init_image \"C:/pictures/my_image.png\"]",
    "Inverts the mask. Great in combination with": "Inverts the mask. Great in combination with",
    "Uses Mask R-CNN (an instance segmentation model) to predict instances. The found instances are mask. Different from": "Uses Mask R-CNN (an instance segmentation model) to predict instances. The found instances are mask. Different from",
    "as it allows to run the inpainting for each found instance individually. This is useful, when using high resolution inpainting. This shortcode only works in the img2img tab of the A1111 WebUI.": "as it allows to run the inpainting for each found instance individually. This is useful, when using high resolution inpainting. This shortcode only works in the img2img tab of the A1111 WebUI.",
    "If per_instance is used it is assumed to be the last operator changing the mask.": "If per_instance is used it is assumed to be the last operator changing the mask.",
    "The supported classes of instances are:": "The supported classes of instances are:",
    "bicycle": "bicycle",
    "car": "car",
    "motorcycle": "motorcycle",
    "airplane": "airplane",
    "bus": "bus",
    "train": "train",
    "truck": "truck",
    "boat": "boat",
    "traffic light": "traffic light",
    "fire hydrant": "fire hydrant",
    "stop sign": "stop sign",
    "parking meter": "parking meter",
    "bench": "bench",
    "bird": "bird",
    "horse": "horse",
    "sheep": "sheep",
    "cow": "cow",
    "elephant": "elephant",
    "bear": "bear",
    "zebra": "zebra",
    "giraffe": "giraffe",
    "backpack": "backpack",
    "umbrella": "umbrella",
    "handbag": "handbag",
    "tie": "tie",
    "suitcase": "suitcase",
    "frisbee": "frisbee",
    "skis": "skis",
    "snowboard": "snowboard",
    "sports ball": "sports ball",
    "kite": "kite",
    "baseball bat": "baseball bat",
    "baseball glove": "baseball glove",
    "skateboard": "skateboard",
    "surfboard": "surfboard",
    "tennis racket": "tennis racket",
    "bottle": "bottle",
    "wine glass": "wine glass",
    "cup": "cup",
    "fork": "fork",
    "knife": "knife",
    "spoon": "spoon",
    "bowl": "bowl",
    "banana": "banana",
    "apple": "apple",
    "sandwich": "sandwich",
    "orange": "orange",
    "broccoli": "broccoli",
    "carrot": "carrot",
    "hot dog": "hot dog",
    "pizza": "pizza",
    "donut": "donut",
    "cake": "cake",
    "chair": "chair",
    "couch": "couch",
    "potted plant": "potted plant",
    "bed": "bed",
    "dining table": "dining table",
    "toilet": "toilet",
    "tv": "tv",
    "laptop": "laptop",
    "mouse": "mouse",
    "remote": "remote",
    "keyboard": "keyboard",
    "cell phone": "cell phone",
    "microwave": "microwave",
    "oven": "oven",
    "toaster": "toaster",
    "sink": "sink",
    "refrigerator": "refrigerator",
    "book": "book",
    "clock": "clock",
    "vase": "vase",
    "scissors": "scissors",
    "teddy bear": "teddy bear",
    "hair drier": "hair drier",
    "toothbrush": "toothbrush",
    "argument which determines how the text mask will behave alongside a brush mask:": "argument which determines how the text mask will behave alongside a brush mask:",
    "will ignore the brush mask entirely.": "will ignore the brush mask entirely.",
    "will remove the brush mask region from the text mask region.": "will remove the brush mask region from the text mask region.",
    "will limit the inital mask to the selected instances.": "will limit the inital mask to the selected instances.",
    "mask_precision": "mask_precision",
    "argument which determines the confidence of the instance mask. Default is 0.5, max value is 1.0. Lowering this value means you may select more than you intend per instance (instances may overlap).": "argument which determines the confidence of the instance mask. Default is 0.5, max value is 1.0. Lowering this value means you may select more than you intend per instance (instances may overlap).",
    "instance_precision": "instance_precision",
    "argument which determines the classification thresshold for instances to be masked. Reduce this, if instances are not detected successfully. Default is 0.85, max value is 1.0. Lowering this value can lead to wrongly classied areas.": "argument which determines the classification thresshold for instances to be masked. Reduce this, if instances are not detected successfully. Default is 0.85, max value is 1.0. Lowering this value can lead to wrongly classied areas.",
    "argument which increases the radius of the instance masks by a given number of pixels.": "argument which increases the radius of the instance masks by a given number of pixels.",
    "argument which refines the boundaries of the mask, allowing you to create a smoother selection. Default is 0. Try a value of 20 or greater if you find that your masks are blocky.": "argument which refines the boundaries of the mask, allowing you to create a smoother selection. Default is 0. Try a value of 20 or greater if you find that your masks are blocky.",
    "select": "select",
    "argument which defines how many instances to mask. Default value is 0, which means all instances.": "argument which defines how many instances to mask. Default value is 0, which means all instances.",
    "select_mode": "select_mode",
    "argument which specifies which instances are selected:": "argument which specifies which instances are selected:",
    "will select the instances starting with the instance that has the greatest absolute brushed mask in it.": "will select the instances starting with the instance that has the greatest absolute brushed mask in it.",
    "overlap relative": "overlap relative",
    "behaves similar to": "behaves similar to",
    "but normalizes the areas by the size of the instance.": "but normalizes the areas by the size of the instance.",
    "will select the greatest instances by pixels first.": "will select the greatest instances by pixels first.",
    "will select instances in a random order\nDefaults to": "will select instances in a random order\nDefaults to",
    "positional argument which will append the final masks to your generation output window and for debug purposes a combined instance segmentation image.": "positional argument which will append the final masks to your generation output window and for debug purposes a combined instance segmentation image.",
    "per_instance": "per_instance",
    "positional argument which will render and append the selected masks individually. Leading to better results if full resolution inpainting is used.": "positional argument which will render and append the selected masks individually. Leading to better results if full resolution inpainting is used.",
    "[instance2mask]clock[/txt2mask]": "[instance2mask]clock[/txt2mask]",
    "This is a helper shortcode that should be used if multiple init images, multiple masks or in combination with instance2mask per_instance should be used. Use this shortcode at the very end of the prompt, such that it can gather the correct init images and masks. Note that this operator will change the batch_size and batch_count (n_iter).": "This is a helper shortcode that should be used if multiple init images, multiple masks or in combination with instance2mask per_instance should be used. Use this shortcode at the very end of the prompt, such that it can gather the correct init images and masks. Note that this operator will change the batch_size and batch_count (n_iter).",
    "A port of": "A port of",
    "the script": "the script",
    "by the same name,": "by the same name,",
    "allows you to create a region for inpainting based only on the text content (as opposed to the brush tool.) This shortcode only works in the img2img tab of the A1111 WebUI.": "allows you to create a region for inpainting based only on the text content (as opposed to the brush tool.) This shortcode only works in the img2img tab of the A1111 WebUI.",
    "precision": "precision",
    "argument which determines the confidence of the mask. Default is 100, max value is 255. Lowering this value means you may select more than you intend.": "argument which determines the confidence of the mask. Default is 100, max value is 255. Lowering this value means you may select more than you intend.",
    "argument which increases the radius of your selection by a given number of pixels.": "argument which increases the radius of your selection by a given number of pixels.",
    "argument which refines the boundaries of the mask, allowing you to create a smoother selection. Default is 20. Try increasing this value if you find that your masks are looking blocky.": "argument which refines the boundaries of the mask, allowing you to create a smoother selection. Default is 20. Try increasing this value if you find that your masks are looking blocky.",
    "argument which will cause the shortcode to calculate the region occupied by your mask selection as a percentage of the total canvas. That value is stored into the variable you specify. For example:": "argument which will cause the shortcode to calculate the region occupied by your mask selection as a percentage of the total canvas. That value is stored into the variable you specify. For example:",
    "[txt2mask size_var=test]face[/txt2mask]": "[txt2mask size_var=test]face[/txt2mask]",
    "if \"face\" takes up 40% of the canvas, then the": "if \"face\" takes up 40% of the canvas, then the",
    "variable will become 0.4.": "variable will become 0.4.",
    "negative_mask": "negative_mask",
    "argument which will subtract areas from the content mask.": "argument which will subtract areas from the content mask.",
    "argument which determines the confidence of the negative mask. Default is 100, max value is 255. Lowering this value means you may select more than you intend.": "argument which determines the confidence of the negative mask. Default is 100, max value is 255. Lowering this value means you may select more than you intend.",
    "which is the same as": "which is the same as",
    "but for the negative prompts.": "but for the negative prompts.",
    "argument which enables support for \"Inpaint Sketch\" mode. Using this argument will force \"Inpaint Sketch\" mode regardless of which img2img tab you are on. The": "argument which enables support for \"Inpaint Sketch\" mode. Using this argument will force \"Inpaint Sketch\" mode regardless of which img2img tab you are on. The",
    "value can either be a preset color string, e.g.": "value can either be a preset color string, e.g.",
    "sketch_color=\"tan\"": "sketch_color=\"tan\"",
    "(": "(",
    "full list of color strings available here": "full list of color strings available here",
    ") or an RGB tuple, e.g.": ") or an RGB tuple, e.g.",
    "sketch_color=\"127,127,127\"": "sketch_color=\"127,127,127\"",
    ". Currently, txt2mask only supports single-color masks.": ". Currently, txt2mask only supports single-color masks.",
    "argument, which should be paired with": "argument, which should be paired with",
    ". The": ". The",
    "value is the level of mask transparency, from 0 (invisible) to 255 (fully opaque.)": "value is the level of mask transparency, from 0 (invisible) to 255 (fully opaque.)",
    "Due to a limitation in the A1111 WebUI at the time of writing, the": "Due to a limitation in the A1111 WebUI at the time of writing, the",
    "parameter is": "parameter is",
    "the same as the \"mask transparency\" option in the UI. \"Mask transparency\" is not stored in the": "the same as the \"mask transparency\" option in the UI. \"Mask transparency\" is not stored in the",
    "object as far as I can tell, so txt2mask implements its own custom solution.": "object as far as I can tell, so txt2mask implements its own custom solution.",
    "save": "save",
    "argument which will output the final mask as a PNG image to the given filepath.": "argument which will output the final mask as a PNG image to the given filepath.",
    "positional argument which will utilize the original CLIPseg weights. By default,": "positional argument which will utilize the original CLIPseg weights. By default,",
    "will use the": "will use the",
    "refined weights": "refined weights",
    "The content and": "The content and",
    "both support the vertical pipe delimiter (": "both support the vertical pipe delimiter (",
    ") which allows you to specify multiple subjects for masking.": ") which allows you to specify multiple subjects for masking.",
    "[txt2mask]head and shoulders[/txt2mask]Walter White": "[txt2mask]head and shoulders[/txt2mask]Walter White",
    "Adding New Shortcodes": "Adding New Shortcodes",
    "Shortcodes are loaded as Python modules from": "Shortcodes are loaded as Python modules from",
    "unprompted/shortcodes": "unprompted/shortcodes",
    ". You can make your own shortcodes by creating files there (preferably within the": ". You can make your own shortcodes by creating files there (preferably within the",
    "/custom": "/custom",
    "subdirectory.)": "subdirectory.)",
    "The shortcode name is defined by the filename, e.g.": "The shortcode name is defined by the filename, e.g.",
    "override.py": "override.py",
    "will give you the ability to use": "will give you the ability to use",
    "[override]": "[override]",
    ". Shortcode filenames should be unique.": ". Shortcode filenames should be unique.",
    "A shortcode is structured as follows:": "A shortcode is structured as follows:",
    "class Shortcode():\n        \"\"\"A description of the shortcode goes here.\"\"\"\n        def __init__(self,Unprompted):\n                self.Unprompted = Unprompted\n\n        def run_block(self, pargs, kwargs, context,content):\n                \n                return(\"\")\n\n        def cleanup(self):\n                \n                return(\"\")": "class Shortcode():\n        \"\"\"A description of the shortcode goes here.\"\"\"\n        def __init__(self,Unprompted):\n                self.Unprompted = Unprompted\n\n        def run_block(self, pargs, kwargs, context,content):\n                \n                return(\"\")\n\n        def cleanup(self):\n                \n                return(\"\")",
    "__init__": "__init__",
    "function gives the shortcode access to our main Unprompted object, and it's where you should declare any unique variables for your shortcode.": "function gives the shortcode access to our main Unprompted object, and it's where you should declare any unique variables for your shortcode.",
    "run_block": "run_block",
    "function contains the main logic for your shortcode. It has access to these special variables (the following documentation was pulled from the": "function contains the main logic for your shortcode. It has access to these special variables (the following documentation was pulled from the",
    "Python Shortcodes": "Python Shortcodes",
    "library, on which Unprompted depends):": "library, on which Unprompted depends):",
    "pargs": "pargs",
    ": a list of the shortcode's positional arguments.": ": a list of the shortcode's positional arguments.",
    "kwargs": "kwargs",
    ": a dictionary of the shortcode's keyword arguments.": ": a dictionary of the shortcode's keyword arguments.",
    "context": "context",
    ": an optional arbitrary context object supplied by the caller.": ": an optional arbitrary context object supplied by the caller.",
    ": the string within the shortcode tags, e.g.": ": the string within the shortcode tags, e.g.",
    "[tag]content[/tag]": "[tag]content[/tag]",
    "Positional and keyword arguments are passed as strings. The function itself should return a string which will replace the shortcode in the parsed text.": "Positional and keyword arguments are passed as strings. The function itself should return a string which will replace the shortcode in the parsed text.",
    "cleanup": "cleanup",
    "function runs at the end of the processing chain. You can free any unnecessary variables from memory here.": "function runs at the end of the processing chain. You can free any unnecessary variables from memory here.",
    "For more details, please examine the code of the stock shortcodes.": "For more details, please examine the code of the stock shortcodes.",
    "Your first Unprompted template. It's a big step, I know. You feeling nervous? A sense of tremendous pressure maybe? Don't worry, it's not that hard to set this thing up.": "Your first Unprompted template. It's a big step, I know. You feeling nervous? A sense of tremendous pressure maybe? Don't worry, it's not that hard to set this thing up.",
    "For the purposes of this guide, we will construct a basic \"human generator\" similar to the one that is included with the repo download.": "For the purposes of this guide, we will construct a basic \"human generator\" similar to the one that is included with the repo download.",
    "Step 1: Create the entry point": "Step 1: Create the entry point",
    "In the root directory of the WebUI app, navigate to": "In the root directory of the WebUI app, navigate to",
    "extensions/unprompted/templates": "extensions/unprompted/templates",
    ". This is where all your templates belong - you can organize the files here in any way you like.": ". This is where all your templates belong - you can organize the files here in any way you like.",
    "Create a blank text file called": "Create a blank text file called",
    "example.txt": "example.txt",
    ". This will serve as the \"entry point\" for our new template.": ". This will serve as the \"entry point\" for our new template.",
    "Open up your new file and enter the following text:": "Open up your new file and enter the following text:",
    "Photo of a man": "Photo of a man",
    "Save the file and boot up your Unprompted interface. I will be using": "Save the file and boot up your Unprompted interface. I will be using",
    "Automatic's repo": "Automatic's repo",
    "for this guide, but you can follow along with the standalone": "for this guide, but you can follow along with the standalone",
    "unprompted_dry.py": "unprompted_dry.py",
    "if you prefer.": "if you prefer.",
    "Now enter the following as your prompt and press generate:": "Now enter the following as your prompt and press generate:",
    "[file example]": "[file example]",
    "You can check the information underneath the resulting picture to confirm that Stable Diffusion received the correct prompt (\"Photo of a man\").": "You can check the information underneath the resulting picture to confirm that Stable Diffusion received the correct prompt (\"Photo of a man\").",
    "Cool! Now let's proceed to the good stuff...": "Cool! Now let's proceed to the good stuff...",
    "Step 2: Using the [choose] shortcode": "Step 2: Using the [choose] shortcode",
    "Let's ask Unprompted to choose between a man and a woman. This is easy to do:": "Let's ask Unprompted to choose between a man and a woman. This is easy to do:",
    "Photo of a [choose]man|woman[/choose]": "Photo of a [choose]man|woman[/choose]",
    "All of the code in this guide refers to our example.txt file unless otherwise noted. Remember to save your file with each change!": "All of the code in this guide refers to our example.txt file unless otherwise noted. Remember to save your file with each change!",
    "You do NOT need to restart the web UI when making changes to your text files.": "You do NOT need to restart the web UI when making changes to your text files.",
    "We can use the vertical pipe (i.e.": "We can use the vertical pipe (i.e.",
    ") to separate our options.": ") to separate our options.",
    "Now, what if we want to specify the hair color for our subject? We could do something like this...": "Now, what if we want to specify the hair color for our subject? We could do something like this...",
    "Photo of a [choose]red|blue|yellow|green[/choose]-haired [choose]man|woman[/choose]": "Photo of a [choose]red|blue|yellow|green[/choose]-haired [choose]man|woman[/choose]",
    "...but as you can imagine, the list of options can become quite lengthy and difficult to manage. There's a better way.": "...but as you can imagine, the list of options can become quite lengthy and difficult to manage. There's a better way.",
    "We will create a separate file called": "We will create a separate file called",
    "color.txt": "color.txt",
    "and put our colors there.": "and put our colors there.",
    "In programming, this is akin to an \"object-oriented approach.\"": "In programming, this is akin to an \"object-oriented approach.\"",
    "To make our life even easier, we can put our options on individual lines instead of relying on the vertical pipe.": "To make our life even easier, we can put our options on individual lines instead of relying on the vertical pipe.",
    "So here's our new": "So here's our new",
    ":": ":",
    "[choose]\nred\nblue\nyellow\ngreen\npink\n[/choose]": "[choose]\nred\nblue\nyellow\ngreen\npink\n[/choose]",
    "Feel free to add a bunch of other colors - I'm keeping things brief for the guide.": "Feel free to add a bunch of other colors - I'm keeping things brief for the guide.",
    "Now, we can reference our new file in": "Now, we can reference our new file in",
    "like this:": "like this:",
    "Photo of a [file color]-haired [choose]man|woman[/choose]": "Photo of a [file color]-haired [choose]man|woman[/choose]",
    "Yes, we are using a": "Yes, we are using a",
    "shortcode inside of another file. This is perhaps one of the most powerful things about Unprompted!": "shortcode inside of another file. This is perhaps one of the most powerful things about Unprompted!",
    "Next, let's check out some other shortcodes we can use.": "Next, let's check out some other shortcodes we can use.",
    "Step 3: Managing Stable Diffusion options with [set]": "Step 3: Managing Stable Diffusion options with [set]",
    "Unprompted has the ability to manage variables using": "Unprompted has the ability to manage variables using",
    ". You can create your own variables or even adjust the system variables used by the image generator.": ". You can create your own variables or even adjust the system variables used by the image generator.",
    "At the bottom of": "At the bottom of",
    ", let's force a seed value of \"1\" to help with later debugging:": ", let's force a seed value of \"1\" to help with later debugging:",
    "[set seed]1[/set]": "[set seed]1[/set]",
    "For improved image quality, we can also force a CFG scale of 7 and turn on the \"Restore Faces\" option:": "For improved image quality, we can also force a CFG scale of 7 and turn on the \"Restore Faces\" option:",
    "[set cfg_scale]7[/set]\n[set restore_faces]1[/set]": "[set cfg_scale]7[/set]\n[set restore_faces]1[/set]",
    "Now no matter how we change the UI, our template will continue using these optimized values.": "Now no matter how we change the UI, our template will continue using these optimized values.",
    "Step 4: Overriding parts of the template": "Step 4: Overriding parts of the template",
    "Imagine a situation where you want the randomness a template offers, but you need to lock in a certain word or phrase of your choosing.": "Imagine a situation where you want the randomness a template offers, but you need to lock in a certain word or phrase of your choosing.",
    "For example, maybe we want to generate a \"panda\" instead of a \"man\" or \"woman.\" Do we have to destructively edit our template file? No! We can use the": "For example, maybe we want to generate a \"panda\" instead of a \"man\" or \"woman.\" Do we have to destructively edit our template file? No! We can use the",
    "shortcode for this. Here's how:": "shortcode for this. Here's how:",
    "In": "In",
    ", we need to wrap the man/woman phrase with a variable that will act like a category:": ", we need to wrap the man/woman phrase with a variable that will act like a category:",
    "[set subject _out][choose]man|woman[/choose][/set]": "[set subject _out][choose]man|woman[/choose][/set]",
    "I'm calling this variable": "I'm calling this variable",
    "subject": "subject",
    "but you can name it anything you like.": "but you can name it anything you like.",
    "_out": "_out",
    "argument indicates to Unprompted that we want to print this variable immediately for use in our prompt. Sometimes you don't want to do this, like when we set the CFG scale and Restore Faces earlier.": "argument indicates to Unprompted that we want to print this variable immediately for use in our prompt. Sometimes you don't want to do this, like when we set the CFG scale and Restore Faces earlier.",
    "Now, inside of our web UI, we can change the prompt to this:": "Now, inside of our web UI, we can change the prompt to this:",
    "[override subject=\"panda\"][file example]": "[override subject=\"panda\"][file example]",
    "That's it, now you've got pandas!": "That's it, now you've got pandas!",
    "In the final section, we will learn about some more advanced functions.": "In the final section, we will learn about some more advanced functions.",
    "Step 5: Conditional shortcodes": "Step 5: Conditional shortcodes",
    "The last subject I want to discuss are the conditional shortcodes": "The last subject I want to discuss are the conditional shortcodes",
    ". These will evaluate given variable(s) in deciding what to output.": ". These will evaluate given variable(s) in deciding what to output.",
    "For our demo, we will run a check on the": "For our demo, we will run a check on the",
    "variable, and if it's set to": "variable, and if it's set to",
    "man": "man",
    ", we will make him wear a business suit 75% of the time. Here's how we can do this:": ", we will make him wear a business suit 75% of the time. Here's how we can do this:",
    "On a new line, we will write": "On a new line, we will write",
    "wearing a business suit": "wearing a business suit",
    "inside of a conditional check...": "inside of a conditional check...",
    "Unprompted will automatically convert any linebreaks in our template to spaces, and it will also remove unnecessary/double spaces at the end of the processing chain.": "Unprompted will automatically convert any linebreaks in our template to spaces, and it will also remove unnecessary/double spaces at the end of the processing chain.",
    "Finally, if we want to make this occur only 75% of the time, we introduce": "Finally, if we want to make this occur only 75% of the time, we introduce",
    "[if subject=\"man\"][chance 75]wearing a business suit[/chance][/if]": "[if subject=\"man\"][chance 75]wearing a business suit[/chance][/if]",
    "He'd like to congratulate you on making it this far.": "He'd like to congratulate you on making it this far.",
    "GG no RE": "GG no RE",
    "I hope you found this starter guide useful and now have a better idea of what Unprompted brings to the table!": "I hope you found this starter guide useful and now have a better idea of what Unprompted brings to the table!",
    "We have only scratched the surface here - when you're ready to do a deeper dive, please check out the full documentation here (or simply click on the Manual tab if you're inside of the app itself):": "We have only scratched the surface here - when you're ready to do a deeper dive, please check out the full documentation here (or simply click on the Manual tab if you're inside of the app itself):",
    "Unprompted Manual": "Unprompted Manual",
    "Good luck!": "Good luck!",
    "Re-process extra networks after Unprompted is finished (WIP - this is not yet functional!)": "Re-process extra networks after Unprompted is finished (WIP - this is not yet functional!)",
    "unprompted": "非文本（代碼化）提示詞",
    "Photo of a cat": "Photo of a cat",
    "Walter White": "Walter White",
    "my_array": "my_array",
    ", ": ", ",
    "my_var < 10": "my_var < 10",
    "my_var + 1": "my_var + 1",
    "my_var=6 another_var=\"300\"": "my_var=6 another_var=\"300\"",
    "hello=\"goodbye\" red=\"blue\"": "hello=\"goodbye\" red=\"blue\"",
    "my_var=\"something\" another_var=56": "my_var=\"something\" another_var=56",
    "my_var another_var": "my_var another_var",
    "Leave blank to use the initial img2img image. Supports multiple paths.": "Leave blank to use the initial img2img image. Supports multiple paths.",
    "e.g. tan or 127,127,127": "e.g. tan or 127,127,127",
    "Test prompt": "Test prompt",
    "Waiting...": "Waiting...",
    "8/75": "8/75",
    "15% ETA: 23s": "15% ETA: 23s",
    "50% ETA: 5s": "50% ETA: 5s",
    "95% ETA: 0s": "95% ETA: 0s",
    "Time taken:": "Time taken:",
    "9.02s": "9.02s",
    "Torch active/reserved: 5760/6026 MiB,": "Torch active/reserved: 5760/6026 MiB,",
    "Sys VRAM: 7905/8192 MiB (96.5%)": "Sys VRAM: 7905/8192 MiB (96.5%)",
    "Masterpiece, best quality, drawing of a (brunette eurasian man) smiling": "Masterpiece, best quality, drawing of a (brunette eurasian man) smiling",
    "Negative prompt: mutation, mutated, bad anatomy, bad hands, text, error, missing fingers, extra limb, deformed, extra digit, fewer digits, cropped, worst quality, low quality, normal quality, jpeg artifacts, signature, username, watermark, blurry": "Negative prompt: mutation, mutated, bad anatomy, bad hands, text, error, missing fingers, extra limb, deformed, extra digit, fewer digits, cropped, worst quality, low quality, normal quality, jpeg artifacts, signature, username, watermark, blurry",
    "Steps: 20, Sampler: Euler a, CFG scale: 7, Seed: 3579906023, Size: 512x512, Model hash: 69528490df, Model: anything-v4.0-pruned": "Steps: 20, Sampler: Euler a, CFG scale: 7, Seed: 3579906023, Size: 512x512, Model hash: 69528490df, Model: anything-v4.0-pruned",
    "/9.0": "/9.0"
}